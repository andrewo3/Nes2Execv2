ca65 V2.13.3 - (C) Copyright 1998-2012 Ullrich von Bassewitz
Main file   : /mnt/ntfs_e/projects/nes/utaco/src/utaco.s
Current file: /mnt/ntfs_e/projects/nes/utaco/src/utaco.s

000000r 1               ;うたいたガールUTACO~「ＩＩコンは世界を救う？！」
000000r 1               ;Miguel Ángel Pérez Martínez - 2012
000000r 1               
000000r 1               .segment "HEADER"
000000r 1               
000000r 1  4E 45 53 1A  .byte   "NES", $1A
000004r 1  08           .byte   8               ;PRG pages
000005r 1  04           .byte   4               ;CHR pages
000006r 1  40           .byte   $40             ;LOW Mapper && Mirroring && misc flags
000007r 1  00           .byte   $00             ;HI Mapper && misc flags
000008r 1  00           .byte   0
000009r 1  00           .byte   0
00000Ar 1  00 00 00 00  .res    6,0
00000Er 1  00 00        
000010r 1               
000010r 1               .include "src/globals.inc"
000010r 2               FontOffset=$80
000010r 2               
000010r 1               .include "src/songdata_1.inc"
000010r 2               .global songdata1_musicdata
000010r 2               
000010r 2               
000010r 2               .include "romdata/first_stage_beats.inc"
000010r 2               
000010r 3               .global first_stage_beats_pI
000010r 3               .global first_stage_beats_beats
000010r 3               .global first_stage_beats_points
000010r 3               .global first_stage_beats_points_minus
000010r 3               .global first_stage_beats_strings_lo
000010r 3               .global first_stage_beats_strings_hi
000010r 3               .global first_stage_beats_commands
000010r 3               
000010r 1               .include "src/songdata_2.inc"
000010r 2               .global songdata2_musicdata
000010r 2               
000010r 2               .include "romdata/second_stage_beats.inc"
000010r 2               
000010r 3               .global second_stage_beats_pI
000010r 3               .global second_stage_beats_beats
000010r 3               .global second_stage_beats_points
000010r 3               .global second_stage_beats_points_minus
000010r 3               .global second_stage_beats_strings_lo
000010r 3               .global second_stage_beats_strings_hi
000010r 3               .global second_stage_beats_commands
000010r 3               
000010r 1               .include "src/songdata_3.inc"
000010r 2               .global songdata3_musicdata
000010r 2               
000010r 2               .include "romdata/third_stage_beats.inc"
000010r 3               .global third_stage_beats_pI
000010r 3               .global third_stage_beats_beats
000010r 3               .global third_stage_beats_points
000010r 3               .global third_stage_beats_points_minus
000010r 3               .global third_stage_beats_strings_lo
000010r 3               .global third_stage_beats_strings_hi
000010r 3               .global third_stage_beats_commands
000010r 3               
000010r 2               
000010r 1               .include "src/minisongs.inc"
000010r 2               .global minisongs_musicdata
000010r 2               
000010r 2               
000010r 2               .global CS_NAM_destroyed_city
000010r 2               .global CS_NAM_mothership
000010r 2               .global CS_NAM_temple_ruins
000010r 2               .global CS_NAM_utaco_temple
000010r 2               .global NAM_title
000010r 2               .global PAL_title
000010r 2               
000010r 1               
000010r 1               .include "../../neslib/nes.s"
000010r 2               ;
000010r 2               ;       Some NES utility functions and things
000010r 2               ;       zlashstudios 2010
000010r 2               ;
000010r 2               
000010r 2               
000010r 2               ;Adds another sprite to the sprite buffer in ram
000010r 2               ;and advances the index to the next space
000010r 2               .macro NES_SETNEXTSPRITE sx, sy, index, attrb
000010r 2               	lda NES::spritesIndex
000010r 2                       tay
000010r 2                       sec
000010r 2                       sbc #$4
000010r 2                       sta NES::spritesIndex
000010r 2               	lda sy
000010r 2               	sta NES::sprites,y
000010r 2               	lda index
000010r 2               	sta NES::sprites+1,y
000010r 2               	lda attrb
000010r 2               	sta NES::sprites+2,y
000010r 2               	lda sx
000010r 2               	sta NES::sprites+3,y
000010r 2               .endmacro
000010r 2               
000010r 2               ;Draws a NxM sprite at sx,sy using index as the top-left corner index
000010r 2               .macro NES_ADDSPRITE_NxM N,M,sx,sy,index,attrb
000010r 2                       lda sx
000010r 2                       sta TempAL
000010r 2                       lda sy
000010r 2                       sta TempAH
000010r 2                       lda index
000010r 2                       sta TempBL
000010r 2                       lda attrb
000010r 2                       sta TempBH
000010r 2                       ldx N
000010r 2                       ldy M
000010r 2                       jsr NES::loadNxMSprite
000010r 2               .endmacro
000010r 2               
000010r 2               ;Sends the current batch of sprites through DMA to PPU
000010r 2               ;and resets the counter.
000010r 2               .macro  NES_DMASPRITES
000010r 2                       ldx #$05
000010r 2                       stx $4014
000010r 2                       ldx #$FC
000010r 2                       stx NES::spritesIndex
000010r 2               .endmacro
000010r 2               
000010r 2               ;MMC3 helper to change bank
000010r 2               .macro NES_MMC3SetBank target,bnk
000010r 2                       ldx bnk
000010r 2                       lda target
000010r 2                       jsr NES::MMC3SetBank
000010r 2               .endmacro
000010r 2               
000010r 2               ;Macro helper to load palettes
000010r 2               .macro NES_loadPalette addr
000010r 2                       ldx #<(addr)
000010r 2                       ldy #>(addr)
000010r 2                       jsr NES::loadPalette
000010r 2               .endmacro
000010r 2               
000010r 2               ;Macro helper to load nametables
000010r 2               .macro NES_loadNametable addr, pos
000010r 2                       ldx #<(addr)
000010r 2                       ldy #>(addr)
000010r 2                       lda #($20 + pos*8)
000010r 2                       jsr NES::loadNametable
000010r 2               .endmacro
000010r 2               
000010r 2               ;Macro helper to load compressed nametables
000010r 2               .macro NES_loadNametableC addr, pos
000010r 2                       ldx #<(addr)
000010r 2                       ldy #>(addr)
000010r 2                       lda #($20 + pos*8)
000010r 2                       jsr NES::loadNametableC
000010r 2               .endmacro
000010r 2               
000010r 2               .macro phy operand
000010r 2                       tya
000010r 2                       pha
000010r 2               .endmacro
000010r 2               .macro phx operand
000010r 2                       txa
000010r 2                       pha
000010r 2               .endmacro
000010r 2               .macro ply operand
000010r 2                       pla
000010r 2                       tay
000010r 2               .endmacro
000010r 2               .macro plx operand
000010r 2                       pla
000010r 2                       tax
000010r 2               .endmacro
000010r 2               
000010r 2               ;Macro helper to avoid writing a clc and an adc everytime
000010r 2               .macro clcadc operand
000010r 2                       clc
000010r 2                       adc operand
000010r 2               .endmacro
000010r 2               
000010r 2               ;Macro helper to avoid writing a sec and an sbc everytime
000010r 2               .macro secsbc operand
000010r 2                       sec
000010r 2                       sbc operand
000010r 2               .endmacro
000010r 2               
000010r 2               ;Macro helper that acts as a mod
000010r 2               .macro pseudomod operand
000010r 2               .local check,end
000010r 2               check:
000010r 2                   cmp operand
000010r 2                   bcc end
000010r 2                   secsbc operand
000010r 2                   jmp check
000010r 2               end:
000010r 2               .endmacro
000010r 2               
000010r 2               ;Fills memory at dst with a
000010r 2               .macro EXPANDED_MEMSET dst,n
000010r 2               	.repeat n,I
000010r 2                       sta dst+I
000010r 2                   .endrepeat
000010r 2               .endmacro
000010r 2               
000010r 2               ;Macro helper to memcpy
000010r 2               .macro MEMCPY dst,src,n
000010r 2                       .if ( .xmatch ({n}, #1) )
000010r 2                               lda src
000010r 2                               sta dst
000010r 2                       .elseif ( .xmatch ({n}, #2) )
000010r 2                               lda src
000010r 2                               sta dst
000010r 2                               lda src+1
000010r 2                               sta dst+1
000010r 2                       .elseif ( .xmatch ({n}, #3) )
000010r 2                               lda src
000010r 2                               sta dst
000010r 2                               lda src+1
000010r 2                               sta dst+1
000010r 2                               lda src+2
000010r 2                               sta dst+2
000010r 2                       .else
000010r 2                               lda #<(src)
000010r 2                               sta PtrAL
000010r 2                               lda #>(src)
000010r 2                               sta PtrAH
000010r 2                               lda #<(dst)
000010r 2                               sta PtrBL
000010r 2                               lda #>(dst)
000010r 2                               sta PtrBH
000010r 2                               ldy n
000010r 2                               jsr NES::memcpy
000010r 2                      .endif
000010r 2               .endmacro
000010r 2               
000010r 2               .macro clearPPU
000010r 2                       lda #%00000000
000010r 2                       sta $2005
000010r 2               		sta $2005
000010r 2               		sta $2000
000010r 2                       sta $2001
000010r 2               
000010r 2               .endmacro
000010r 2               
000010r 2               .segment "ZEROPAGE"
000000r 2               ;8 Temp values to use across all the modules
000000r 2               TempA:
000000r 2  xx           TempAL:         .res 1
000001r 2  xx           TempAH:         .res 1
000002r 2  xx           TempAHP:        .res 1
000003r 2               TempB:
000003r 2  xx           TempBL:         .res 1
000004r 2  xx           TempBH:         .res 1
000005r 2  xx           TempBHP:        .res 1
000006r 2               TempC:
000006r 2  xx           TempCL:         .res 1
000007r 2  xx           TempCH:         .res 1
000008r 2  xx           TempCHP:        .res 1
000009r 2               TempD:
000009r 2  xx           TempDL:         .res 1
00000Ar 2  xx           TempDH:         .res 1
00000Br 2  xx           TempDHP:        .res 1
00000Cr 2               TempE:
00000Cr 2  xx           TempEL:         .res 1
00000Dr 2  xx           TempEH:         .res 1
00000Er 2  xx           TempEHP:        .res 1
00000Fr 2               PtrA:
00000Fr 2  xx           PtrAL:          .res 1
000010r 2  xx           PtrAH:          .res 1
000011r 2               PtrB:
000011r 2  xx           PtrBL:          .res 1
000012r 2  xx           PtrBH:          .res 1
000013r 2               
000013r 2               .segment "BSS"
000000r 2               
000000r 2               nzpTempA:
000000r 2  xx           nzpTempAL:         .res 1
000001r 2  xx           nzpTempAH:         .res 1
000002r 2  xx           nzpTempAHP:        .res 1
000003r 2               nzpTempB:
000003r 2  xx           nzpTempBL:         .res 1
000004r 2  xx           nzpTempBH:         .res 1
000005r 2  xx           nzpTempBHP:        .res 1
000006r 2               
000006r 2               
000006r 2               .scope NES
000006r 2               
000006r 2               .scope MMC3TARGETS
000006r 2                       CHRx0000 = 0
000006r 2                       CHRx0800 = 1
000006r 2                       CHRx1000 = 2
000006r 2                       CHRx1400 = 3
000006r 2                       CHRx1800 = 4
000006r 2                       CHRx1C00 = 5
000006r 2                       PRGx8000 = 6
000006r 2                       PRGxA000 = 7
000006r 2               .endscope
000006r 2               
000006r 2               .scope JOY
000006r 2                       BUT_A   = $01
000006r 2                       BUT_B   = $02
000006r 2                       SELECT  = $04
000006r 2                       START   = $08
000006r 2                       UP      = $10
000006r 2                       DOWN    = $20
000006r 2                       LEFT    = $40
000006r 2                       RIGHT   = $80
000006r 2               .endscope
000006r 2               
000006r 2               
000006r 2               .segment "ZEROPAGE"
000013r 2  xx           spritesIndex:    .res 1
000014r 2               
000014r 2               .segment "BSS"
000006r 2  xx           scrollX:        .res 1
000007r 2  xx           scrollY:        .res 1
000008r 2  xx           mmc3Setting:    .res 1
000009r 2               
000009r 2               .export mmc3Setting
000009r 2               
000009r 2               .segment "DMA500"
000000r 2  xx xx xx xx  sprites:        .res $ff
000004r 2  xx xx xx xx  
000008r 2  xx xx xx xx  
0000FFr 2               
0000FFr 2               
0000FFr 2               .segment "CODE"
000000r 2               
000000r 2               ;Copies y bytes from (PtrA) to (PtrB)
000000r 2               memcpy:
000000r 2  88                   dey
000001r 2  B1 rr                lda (PtrA),y
000003r 2  91 rr                sta (PtrB),y
000005r 2  98                   tya
000006r 2  D0 F8                bne memcpy
000008r 2  60                   rts
000009r 2               
000009r 2               
000009r 2               ;Loads a nametable on the address pointed by the
000009r 2               ; x (low) and y(high) registers A (origin)
000009r 2               loadNametable:
000009r 2  86 rr                stx PtrAL
00000Br 2  84 rr                sty PtrAH
00000Dr 2  8D 06 20             sta $2006
000010r 2  A9 00                lda #$00
000012r 2  8D 06 20             sta $2006
000015r 2  A2 04                ldx #4
000017r 2  A0 00                ldy #0
000019r 2               :
000019r 2  B1 rr                lda (PtrA),y
00001Br 2  8D 07 20             sta $2007
00001Er 2  C8                   iny
00001Fr 2  D0 F8                bne :-
000021r 2  E6 rr                inc PtrAH
000023r 2  CA                   dex
000024r 2  D0 F3                bne :-
000026r 2  60                   rts
000027r 2               
000027r 2               ;Loads a RLE compressed nametable on the address pointed by the
000027r 2               ; x (low) and y(high) registers A (origin)
000027r 2               loadNametableC:
000027r 2  86 rr                stx PtrAL
000029r 2  84 rr                sty PtrAH
00002Br 2  8D 06 20             sta $2006
00002Er 2  A9 00                lda #$00
000030r 2  8D 06 20             sta $2006
000033r 2               
000033r 2               beginNTRLE:
000033r 2  A0 00                ldy #0
000035r 2  B1 rr                lda (PtrA),y
000037r 2  F0 1A                beq endNTRLE
000039r 2  AA                   tax
00003Ar 2  C8                   iny
00003Br 2  B1 rr                lda (PtrA),y
00003Dr 2               :
00003Dr 2  8D 07 20             sta $2007
000040r 2  CA                   dex
000041r 2  D0 FA                bne :-
000043r 2  A5 rr                lda PtrAL
000045r 2  18 69 02             clcadc #2
000048r 2  85 rr                sta PtrAL
00004Ar 2  A9 00                lda #0
00004Cr 2  65 rr                adc PtrAH
00004Er 2  85 rr                sta PtrAH
000050r 2  4C rr rr             jmp beginNTRLE
000053r 2               endNTRLE:
000053r 2  60                   rts
000054r 2               
000054r 2               ;Fills a nametable with the X value registers A (origin)
000054r 2               fillNametable:
000054r 2  8D 06 20             sta $2006
000057r 2  A9 00                lda #$00
000059r 2  8D 06 20             sta $2006
00005Cr 2  8A                   txa
00005Dr 2  A2 04                ldx #4
00005Fr 2  A0 00                ldy #0
000061r 2               :
000061r 2  8D 07 20             sta $2007
000064r 2  C8                   iny
000065r 2  D0 FA                bne :-
000067r 2  CA                   dex
000068r 2  D0 F7                bne :-
00006Ar 2  60                   rts
00006Br 2               
00006Br 2               
00006Br 2               ;Loads a palette on the address pointed by the
00006Br 2               ; x (low) and y(high) registers
00006Br 2               loadPalette:
00006Br 2  86 rr        		stx PtrAL
00006Dr 2  84 rr                sty PtrAH
00006Fr 2  A9 3F        		lda #$3F
000071r 2  8D 06 20     		sta $2006
000074r 2  A9 00        		lda #$00
000076r 2  8D 06 20     		sta $2006
000079r 2  A0 00        		ldy #$00
00007Br 2               :
00007Br 2  B1 rr        		lda (PtrA), y
00007Dr 2  8D 07 20     		sta $2007
000080r 2  C8           		iny
000081r 2  C0 20        		cpy #$20
000083r 2  D0 F6        		bne :-
000085r 2  60                   rts
000086r 2               
000086r 2               
000086r 2               ;Clears all the sprites that haven't been used
000086r 2               clearRemainingSprites:
000086r 2  A9 F7                lda #$F7
000088r 2  A4 rr                ldy spritesIndex
00008Ar 2               :
00008Ar 2  99 rr rr             sta sprites,y
00008Dr 2  88                   dey
00008Er 2  88                   dey
00008Fr 2  88                   dey
000090r 2  88                   dey
000091r 2  C0 FC                cpy #$FC
000093r 2  D0 F5                bne :-
000095r 2  60                   rts
000096r 2               
000096r 2               ;MMC3 Swaps the x bank into the A target
000096r 2               MMC3SetBank:
000096r 2  85 rr                sta TempA
000098r 2  AD rr rr             lda mmc3Setting
00009Br 2  29 C0                and #$C0
00009Dr 2  05 rr                ora TempA
00009Fr 2  8D 00 80             sta $8000
0000A2r 2  8E 01 80             stx $8001
0000A5r 2  60                   rts
0000A6r 2               
0000A6r 2               ;Loads a NxM Sprite to sx,sy: TempA
0000A6r 2               ; index, attrb: TempB
0000A6r 2               ; n=x, m=y
0000A6r 2               loadNxMSprite:
0000A6r 2  86 rr                stx TempCL
0000A8r 2  A5 rr                lda TempAL
0000AAr 2  85 rr                sta TempEL
0000ACr 2               yloop:
0000ACr 2               xloop:
0000ACr 2  98                   tya
0000ADr 2  48                   pha
0000AEr 2  A5 rr A8 38          NES_SETNEXTSPRITE TempAL,TempAH,TempBL,TempBH
0000B2r 2  E9 04 85 rr  
0000B6r 2  A5 rr 99 rr  
0000CAr 2  68                   pla
0000CBr 2  A8                   tay
0000CCr 2               
0000CCr 2  A5 rr                lda TempAL
0000CEr 2  18 69 08             clcadc #8
0000D1r 2  85 rr                sta TempAL
0000D3r 2  E6 rr                inc TempBL
0000D5r 2  CA                   dex
0000D6r 2  D0 D4                bne xloop
0000D8r 2  A6 rr                ldx TempCL
0000DAr 2               
0000DAr 2  A5 rr                lda TempEL
0000DCr 2  85 rr                sta TempAL
0000DEr 2  A5 rr                lda TempAH
0000E0r 2  18 69 08             clcadc #8
0000E3r 2  85 rr                sta TempAH
0000E5r 2  A5 rr                lda TempBL
0000E7r 2  18 69 10             clcadc #$10
0000EAr 2  38 E5 rr             secsbc TempCL
0000EDr 2  85 rr                sta TempBL
0000EFr 2               
0000EFr 2  88                   dey
0000F0r 2  D0 BA                bne yloop
0000F2r 2               
0000F2r 2  60                   rts
0000F3r 2               
0000F3r 2               .endscope
0000F3r 2               
0000F3r 1               .include "../../neslib/fpa.s"
0000F3r 2               ;
0000F3r 2               ;       24 bit helpers functions for fixed-point arithmetic
0000F3r 2               ;       zlashstudios 2010
0000F3r 2               ;
0000F3r 2               
0000F3r 2               ;Helper macro that outputs 3 .byte directives for a
0000F3r 2               ;base 2 24-8 fixed-point number from a base 10
0000F3r 2               ;decimal-integer number pair
0000F3r 2               ;sign must be 1 or -1
0000F3r 2               
0000F3r 2               .macro FPA_MAKEFP sign, i, d
0000F3r 2                       .local R
0000F3r 2                       R:=sign*((i<<8)|($FF&(($100*d)/100)))
0000F3r 2                       .byte R&$FF
0000F3r 2                       .word (R>>8)&$FFFF
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               
0000F3r 2               ;Compares 24-bit numbers
0000F3r 2               .macro FPA_CMP_24 pa,pb
0000F3r 2                       .repeat 3,I
0000F3r 2                       lda pa+2-I
0000F3r 2               		cmp pb+2-I
0000F3r 2                       bne :+
0000F3r 2                       .endrepeat
0000F3r 2               :
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Increments a 48-bit number
0000F3r 2               .macro FPA_INC_48 pa
0000F3r 2                       .local done
0000F3r 2                       inc pa
0000F3r 2                       bne done
0000F3r 2                       inc pa+1
0000F3r 2                       bne done
0000F3r 2                       inc pa+2
0000F3r 2                       bne done
0000F3r 2                       inc pa+3
0000F3r 2                       bne done
0000F3r 2                       inc pa+4
0000F3r 2                       bne done
0000F3r 2                       inc pa+5
0000F3r 2               done:
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Increments a 24-bit number
0000F3r 2               .macro FPA_INC_24 pa
0000F3r 2                       .local done
0000F3r 2                       inc pa
0000F3r 2                       bne done
0000F3r 2                       inc pa+1
0000F3r 2                       bne done
0000F3r 2                       inc pa+2
0000F3r 2               done:
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Decrements a 24-bit number
0000F3r 2               .macro FPA_DEC_24 pa
0000F3r 2                       clc
0000F3r 2                       .repeat 3,I
0000F3r 2                       lda pa+I
0000F3r 2                       adc #$FF
0000F3r 2                       sta pa+I
0000F3r 2                       .endrepeat
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Increments a 16-bit number
0000F3r 2               .macro FPA_INC_16 pa
0000F3r 2                       .local done
0000F3r 2                       inc pa
0000F3r 2                       bne done
0000F3r 2                       inc pa+1
0000F3r 2               done:
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               
0000F3r 2               ;Adds an 8-bit number to a 24 bit one
0000F3r 2               .macro FPA_ADD_24_8  pa, pb
0000F3r 2                       clc
0000F3r 2                       lda pa
0000F3r 2                       adc pb
0000F3r 2                       sta pa
0000F3r 2               		.repeat 2,I
0000F3r 2                       lda pa+I+1
0000F3r 2                       adc #$00
0000F3r 2                       sta pa+I+1
0000F3r 2                       .endrepeat
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Adds the content of the A register to a 16 bit number
0000F3r 2               .macro FPA_ADD_16_A  pa
0000F3r 2                       clc
0000F3r 2                       adc pa
0000F3r 2                       sta pa
0000F3r 2                       lda #0
0000F3r 2                       adc pa+1
0000F3r 2                       sta pa+1
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Adds two 24-bit numbers
0000F3r 2               .macro FPA_ADD_24  pa, pb
0000F3r 2                       clc
0000F3r 2                       .repeat 3,I
0000F3r 2                       lda pa+I
0000F3r 2                       adc pb+I
0000F3r 2                       sta pa+I
0000F3r 2                       .endrepeat
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Adds two 16-bit numbers
0000F3r 2               .macro FPA_ADD_16  pa, pb
0000F3r 2                       clc
0000F3r 2                       .repeat 2,I
0000F3r 2                       lda pa+I
0000F3r 2                       adc pb+I
0000F3r 2                       sta pa+I
0000F3r 2                       .endrepeat
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Adds two 48-bit numbers
0000F3r 2               .macro FPA_ADD_48  pa, pb
0000F3r 2                       clc
0000F3r 2                       .repeat 6,I
0000F3r 2                       lda pa+I
0000F3r 2                       adc pb+I
0000F3r 2                       sta pa+I
0000F3r 2                       .endrepeat
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               
0000F3r 2               ;Shifts right 48 bits
0000F3r 2               .macro FPA_LSR_48 pa
0000F3r 2                       clc
0000F3r 2                       .repeat 6,I
0000F3r 2                       ror pa+(5-I)
0000F3r 2                       .endrepeat
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Shifts right 24 bits
0000F3r 2               .macro FPA_LSR_24 pa
0000F3r 2                       clc
0000F3r 2                       .repeat 3,I
0000F3r 2                       ror pa+(2-I)
0000F3r 2                       .endrepeat
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Shifts right 16 bits
0000F3r 2               .macro FPA_LSR_16 pa
0000F3r 2                       clc
0000F3r 2                       .repeat 2,I
0000F3r 2                       ror pa+(1-I)
0000F3r 2                       .endrepeat
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Shifts left 48 bits
0000F3r 2               .macro FPA_ASL_48 pa
0000F3r 2                       clc
0000F3r 2                       .repeat 6,I
0000F3r 2                       rol pa+I
0000F3r 2                       .endrepeat
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Shifts left 24 bits
0000F3r 2               .macro FPA_ASL_24 pa
0000F3r 2                       clc
0000F3r 2                       .repeat 3,I
0000F3r 2                       rol pa+I
0000F3r 2                       .endrepeat
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Helper macro for the FPA multiplication routine
0000F3r 2               ; ONLY POSITIVE NUMBERS!!
0000F3r 2               .macro FPA_MUL_24  pa, pb
0000F3r 2                       MEMCPY TempA, pa, #3
0000F3r 2                       MEMCPY TempC, pb, #3
0000F3r 2                       jsr FPA::mul24
0000F3r 2                       MEMCPY pa, TempD+1, #3
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Helper macro for the FPA multiplication routine
0000F3r 2               ;accepts also negative numbers
0000F3r 2               .macro FPA_MUL_24_S  pa, pb
0000F3r 2                       .local done
0000F3r 2                       .local noneg1
0000F3r 2                       .local noneg2
0000F3r 2                       MEMCPY TempA, pa, #3
0000F3r 2                       MEMCPY TempC, pb, #3
0000F3r 2               
0000F3r 2                       ldx #0
0000F3r 2                       lda TempA+2
0000F3r 2                       bpl noneg1
0000F3r 2                       FPA_NEG_24 TempA
0000F3r 2                       inx
0000F3r 2               noneg1:
0000F3r 2                       lda TempC+2
0000F3r 2                       bpl noneg2
0000F3r 2                       FPA_NEG_24 TempC
0000F3r 2                       inx
0000F3r 2               noneg2:
0000F3r 2                       txa
0000F3r 2                       pha
0000F3r 2                       jsr FPA::mul24
0000F3r 2                       MEMCPY pa, TempD+1, #3
0000F3r 2                       pla
0000F3r 2                       and #1
0000F3r 2                       beq done
0000F3r 2                       FPA_NEG_24 pa
0000F3r 2               done:
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Changes the sign of a 48-bit number
0000F3r 2               .macro FPA_NEG_48 pa
0000F3r 2                       .repeat 6,I
0000F3r 2                       lda pa+I
0000F3r 2                       eor #$FF
0000F3r 2                       sta pa+I
0000F3r 2                       .endrepeat
0000F3r 2                       FPA_INC_48 pa
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               
0000F3r 2               ;Changes the sign of a 24-bit number
0000F3r 2               .macro FPA_NEG_24 pa
0000F3r 2                       .repeat 3,I
0000F3r 2                       lda pa+I
0000F3r 2                       eor #$FF
0000F3r 2                       sta pa+I
0000F3r 2                       .endrepeat
0000F3r 2                       FPA_INC_24 pa
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Changes the sign of a 16-bit number
0000F3r 2               .macro FPA_NEG_16 pa
0000F3r 2                       .repeat 2,I
0000F3r 2                       lda pa+I
0000F3r 2                       eor #$FF
0000F3r 2                       sta pa+I
0000F3r 2                       .endrepeat
0000F3r 2                       FPA_INC_16 pa
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Divide macro helper (Only positive!)
0000F3r 2               .macro FPA_DIVIDE_24 pa,pb
0000F3r 2                       MEMCPY TempA,pa,#3
0000F3r 2                       MEMCPY TempD,pb,#3
0000F3r 2                       jsr FPA::divide_24
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Divide macro with sign-check and preupscale
0000F3r 2               .macro FPA_DIVIDE_24_PREUP_S pa,pb
0000F3r 2                       .local done
0000F3r 2                       .local noneg1
0000F3r 2                       .local noneg2
0000F3r 2                       lda #0
0000F3r 2                       sta TempAL
0000F3r 2                       MEMCPY TempAH,pa,#2
0000F3r 2                       MEMCPY TempD,pb,#3
0000F3r 2               
0000F3r 2                       ldx #0
0000F3r 2                       lda TempA+2
0000F3r 2                       bpl noneg1
0000F3r 2                       FPA_NEG_24 TempA
0000F3r 2                       inx
0000F3r 2               noneg1:
0000F3r 2                       lda TempD+2
0000F3r 2                       bpl noneg2
0000F3r 2                       FPA_NEG_24 TempC
0000F3r 2                       inx
0000F3r 2               noneg2:
0000F3r 2                       txa
0000F3r 2                       pha
0000F3r 2                       jsr FPA::divide_24
0000F3r 2                       pla
0000F3r 2                       and #1
0000F3r 2                       beq done
0000F3r 2                       FPA_NEG_24 TempE
0000F3r 2               done:
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;Divide macro helper with a preupscale to keep resolution
0000F3r 2               .macro FPA_DIVIDE_24_PREUP pa,pb
0000F3r 2                       lda #0
0000F3r 2                       sta TempAL
0000F3r 2                       MEMCPY TempAH,pa,#2
0000F3r 2                       MEMCPY TempD,pb,#3
0000F3r 2                       jsr FPA::divide_24
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               ;ADVANCES RANDOM VALUE
0000F3r 2               .macro FPA_RAND
0000F3r 2               		jsr FPA::rand
0000F3r 2               .endmacro
0000F3r 2               
0000F3r 2               
0000F3r 2               .scope FPA
0000F3r 2               
0000F3r 2               .segment "ZEROPAGE"
000014r 2               
000014r 2               .segment "BSS"
000009r 2               
000009r 2  xx xx xx     	RandomValue:		.res 3
00000Cr 2               
00000Cr 2               
00000Cr 2               .segment "CODE"
0000F3r 2               
0000F3r 2               
0000F3r 2               ;Multiplies two 24-bit numbers, but shifts the result as
0000F3r 2               ;it were a 24-bit fixed-point variable with 8-bits of
0000F3r 2               ;decimal part
0000F3r 2               ;TempD+1  = TempA*TempC
0000F3r 2               ;!!! Both MUST be POSITIVE !!!
0000F3r 2               mul24:
0000F3r 2  A9 00                lda #0
0000F5r 2  85 rr 85 rr          .repeat 3,I
0000F9r 2  85 rr 85 rr  
0000FDr 2  85 rr 85 rr  
000107r 2                       sta TempB+I
000107r 2                       sta TempD+I
000107r 2                       sta TempE+I
000107r 2                       .endrepeat
000107r 2               
000107r 2               loop:
000107r 2  A9 01                lda #1
000109r 2  25 rr                and TempC
00010Br 2  F0 25                beq noadd
00010Dr 2  18 A5 rr 65          FPA_ADD_48 TempD,TempA
000111r 2  rr 85 rr A5  
000115r 2  rr 65 rr 85  
000132r 2               noadd:
000132r 2  A5 rr                lda TempC
000134r 2  4A                   lsr A
000135r 2  D0 09                bne keepon
000137r 2  A5 rr                lda TempC+1
000139r 2  D0 05                bne keepon
00013Br 2  A5 rr                lda TempC+2
00013Dr 2  D0 01                bne keepon
00013Fr 2  60                   rts
000140r 2               keepon:
000140r 2  18 66 rr 66          FPA_LSR_24 TempC
000144r 2  rr 66 rr     
000147r 2  18 26 rr 26          FPA_ASL_48 TempA
00014Br 2  rr 26 rr 26  
00014Fr 2  rr 26 rr 26  
000154r 2  4C rr rr             jmp loop
000157r 2               
000157r 2               ; Magical Punga Cheap Divide
000157r 2               ; Divides 24-bit POSITIVE Numbers
000157r 2               ; TempA/TempD
000157r 2               ; Q at TempE
000157r 2               ; R at TempB
000157r 2               divide_24:
000157r 2  A9 00                lda #0
000159r 2  85 rr                sta TempBL
00015Br 2  85 rr                sta TempBH
00015Dr 2  85 rr                sta TempBHP
00015Fr 2  85 rr                sta TempCL
000161r 2  85 rr                sta TempCH
000163r 2  85 rr                sta TempCHP
000165r 2  85 rr                sta TempEL
000167r 2  85 rr                sta TempEH
000169r 2  85 rr                sta TempEHP
00016Br 2  A9 rr 85 rr          MEMCPY nzpTempA,TempC,#6
00016Fr 2  A9 rr 85 rr  
000173r 2  A9 rr 85 rr  
000180r 2  A5 rr 49 FF          FPA_NEG_48 TempC
000184r 2  85 rr A5 rr  
000188r 2  49 FF 85 rr  
0001BAr 2  A0 18                ldy #24
0001BCr 2               divLoop:
0001BCr 2  18 26 rr 26          FPA_ASL_48 TempA
0001C0r 2  rr 26 rr 26  
0001C4r 2  rr 26 rr 26  
0001C9r 2  18 A5 rr 65          FPA_ADD_48 TempA,TempC
0001CDr 2  rr 85 rr A5  
0001D1r 2  rr 65 rr 85  
0001EEr 2  A5 rr                lda TempBHP
0001F0r 2  30 09                bmi isNegative
0001F2r 2  A5 rr                lda TempEL
0001F4r 2  09 01                ora #1
0001F6r 2  85 rr                sta TempEL
0001F8r 2  4C rr rr             jmp loopCondCheck
0001FBr 2               isNegative:
0001FBr 2  18 A5 rr 6D          FPA_ADD_48 TempA,nzpTempA
0001FFr 2  rr rr 85 rr  
000203r 2  A5 rr 6D rr  
000226r 2               loopCondCheck:
000226r 2  88                   dey
000227r 2  F0 0A                beq end_divide_24
000229r 2  18 26 rr 26          FPA_ASL_24 TempE
00022Dr 2  rr 26 rr     
000230r 2  4C rr rr             jmp divLoop
000233r 2               end_divide_24:
000233r 2  60                   rts
000234r 2               
000234r 2               
000234r 2               rand:
000234r 2  AD rr rr 85  		FPA_MUL_24 RandomValue,LCGA
000238r 2  rr AD rr rr  
00023Cr 2  85 rr AD rr  
000264r 2  18 AD rr rr  		FPA_ADD_24 RandomValue,LCGC
000268r 2  6D rr rr 8D  
00026Cr 2  rr rr AD rr  
000280r 2  60           		rts
000281r 2               
000281r 2               .macro TOBCDMACRO
000281r 2               
000281r 2               .endmacro
000281r 2               
000281r 2               ;Transform the 16 bits number at TempA to BCD at TempC (5 bytes)
000281r 2               toBCD:
000281r 2  A9 00                lda #0
000283r 2  85 rr                sta TempC
000285r 2  85 rr                sta TempC+1
000287r 2  85 rr                sta TempC+2
000289r 2  85 rr                sta TempC+3
00028Br 2  85 rr                sta TempC+4
00028Dr 2               
00028Dr 2  AD rr rr 85          .repeat 5,I
000291r 2  rr AD rr rr  
000295r 2  85 rr A5 rr  
0003D2r 2                       MEMCPY TempB,bcdTable+(I*2),#2
0003D2r 2                       FPA_NEG_16 TempB
0003D2r 2               :
0003D2r 2                       FPA_ADD_16 TempA,TempB
0003D2r 2                       lda TempA+1
0003D2r 2                       bmi :+
0003D2r 2                       inc TempC+I
0003D2r 2                       jmp :-
0003D2r 2               :
0003D2r 2                       FPA_ADD_16 TempA,bcdTable+(I*2)
0003D2r 2               
0003D2r 2                       .endrepeat
0003D2r 2  60                   rts
0003D3r 2               
0003D3r 2               ;CONSTS
0003D3r 2  10 27 E8 03  bcdTable:   .byte <10000,>10000,<1000,>1000,<100,>100,<10,>10,<1,>1
0003D7r 2  64 00 0A 00  
0003DBr 2  01 00        
0003DDr 2               
0003DDr 2               
0003DDr 2  E0 FF FF     LCGC:  .byte $E0,$FF,$FF
0003E0r 2  56 55 55     LCGA:  .byte $56,$55,$55
0003E3r 2               .endscope
0003E3r 2               
0003E3r 2               
0003E3r 1               
0003E3r 1               .import ft_music_init, ft_music_play
0003E3r 1               
0003E3r 1               .export ft_music_addr
0003E3r 1               
0003E3r 1               .define GRID_W 9
0003E3r 1               .define GRID_H 7
0003E3r 1               
0003E3r 1               MINOS_HEADER_OFFSET=7
0003E3r 1               BG_GRID_OFFSET=$42
0003E3r 1               
0003E3r 1               .macro WaitForVBlank
0003E3r 1                       lda vblank
0003E3r 1               :       cmp vblank
0003E3r 1                       beq :-
0003E3r 1               .endmacro
0003E3r 1               
0003E3r 1               RTI_opcode = $40
0003E3r 1               JMP_opcode = $4C
0003E3r 1               
0003E3r 1               .macro SetRTIIRQ
0003E3r 1               	lda #RTI_opcode
0003E3r 1               	sta IRQMagic
0003E3r 1               .endmacro
0003E3r 1               
0003E3r 1               
0003E3r 1               .macro SetIRQAddr addr
0003E3r 1               	lda #RTI_opcode
0003E3r 1               	sta IRQMagic
0003E3r 1               	lda #<addr
0003E3r 1               	sta IRQMagic+1
0003E3r 1               	lda #>addr
0003E3r 1               	sta IRQMagic+2
0003E3r 1               	lda #JMP_opcode
0003E3r 1               	sta IRQMagic
0003E3r 1               .endmacro
0003E3r 1               
0003E3r 1               .macro SetMinisongsBanks
0003E3r 1               	lda #6
0003E3r 1               	sta $8000
0003E3r 1               	sta $8001
0003E3r 1               	lda #7
0003E3r 1               	sta $8000
0003E3r 1               	sta $8001
0003E3r 1               .endmacro
0003E3r 1               
0003E3r 1               .struct JumpGameData
0003E3r 1                       blockCount	.byte
0003E3r 1                       blockPos	.byte 2
0003E3r 1               	blockCount30	.byte
0003E3r 1                       blockPos30	.byte 2
0003E3r 1               	scroll		.byte 3
0003E3r 1               	insertPoint	.byte 2
0003E3r 1               	prevInsertPoint	.byte 2
0003E3r 1               	needForInsert	.byte 1
0003E3r 1               	tilesForInsert  .byte 8
0003E3r 1               	whereToInsert	.byte 2
0003E3r 1               	uSpriteCounter	.byte 3
0003E3r 1               	beatLock	.byte 1
0003E3r 1               	cmdPos		.byte 2
0003E3r 1               	cmdCount	.byte 1
0003E3r 1               	lyLines		.byte 2
0003E3r 1               	BeatBar1	.byte 20
0003E3r 1               	BeatBar2	.byte 20
0003E3r 1               	irqPos		.byte 1
0003E3r 1               	frozenScrolls	.byte 2
0003E3r 1               	score		.byte 3
0003E3r 1               	curBeat		.byte 1
0003E3r 1               	beatScored	.byte 1
0003E3r 1               	scY		.byte 1
0003E3r 1               	DeathCounter	.byte 1
0003E3r 1               	pI		.byte 3
0003E3r 1               	points		.byte 3
0003E3r 1               	pointsMinus     .byte 3
0003E3r 1               .endstruct
0003E3r 1               
0003E3r 1               .struct TitleScreenData
0003E3r 1               	bspos		.byte 1
0003E3r 1               	fskip		.byte 1
0003E3r 1               .endstruct
0003E3r 1               
0003E3r 1               .segment "ZEROPAGE"
000014r 1  xx xx xx xx          scratch:        	.res 12
000018r 1  xx xx xx xx  
00001Cr 1  xx xx xx xx  
000020r 1  xx                   joyStatus:      	.res 1
000021r 1  xx                   joyStatusLock:  	.res 1
000022r 1  xx           	micStatus:		.res 1
000023r 1  xx           	vblank:         	.res 1
000024r 1  xx           	mode:           	.res 1
000025r 1  xx           	vBlankSubHandler: 	.res 1
000026r 1               
000026r 1  xx xx        	MSLAddr:		.res 2
000028r 1  xx xx        	csStrAddr:		.res 2
00002Ar 1  xx xx        	csStrAddr2:		.res 2
00002Cr 1  xx xx        	csStrAddr3:		.res 2
00002Er 1  xx xx        	csStrAddr4:		.res 2
000030r 1  xx xx xx     	IRQMagic:		.res 3
000033r 1  xx xx xx     	tmp3:			.res 3
000036r 1               
000036r 1               .segment "BSS"
00000Cr 1  xx xx xx xx  	jgd:			.tag JumpGameData
000010r 1  xx xx xx xx  
000014r 1  xx xx xx xx  
000068r 1  xx xx        	tsd:			.tag TitleScreenData
00006Ar 1  xx           	language:		.res 1
00006Br 1  xx           	curCutscene:		.res 1
00006Cr 1  xx           	csCurStr:		.res 1
00006Dr 1  xx xx        	csPPUPos:		.res 2
00006Fr 1  xx           	csStringReady:		.res 1
000070r 1  xx           	csFrameDelay:		.res 1
000071r 1  xx           	csFrameCounter:		.res 1
000072r 1  xx           	csColCounter:		.res 1
000073r 1  xx           	curSong:		.res 1
000074r 1  xx xx        	ft_music_addr:  	.res 2
000076r 1               
000076r 1               .segment "CODE"
0003E3r 1               
0003E3r 1               
0003E3r 1               ;;||=============================================================||;;
0003E3r 1               reset:
0003E3r 1  78                   sei
0003E4r 1  D8                   cld
0003E5r 1  A2 FF                ldx #$FF
0003E7r 1  9A                   txs
0003E8r 1               
0003E8r 1                       ;Clear RAM
0003E8r 1  A2 00        	ldx #$00
0003EAr 1  A9 00        	lda #$00
0003ECr 1               clearram:
0003ECr 1  95 00 9D 00  		.repeat 8,I
0003F0r 1  01 9D 00 02  
0003F4r 1  9D 00 03 9D  
000403r 1               		sta I*$100,x
000403r 1               		.endrepeat
000403r 1  CA           		dex
000404r 1  D0 E6        		bne clearram
000406r 1               
000406r 1                       ;Wait 2 blanks for PPU to be ready
000406r 1  2C 02 20     :       bit $2002
000409r 1  10 FB                bpl :-
00040Br 1  2C 02 20     :       bit $2002
00040Er 1  10 FB                bpl :-
000410r 1               
000410r 1  A9 00 8D 05          clearPPU
000414r 1  20 8D 05 20  
000418r 1  8D 00 20 8D  
00041Er 1               
00041Er 1               	;clear APU
00041Er 1  A9 40                lda #$40
000420r 1  8D 17 40             sta $4017
000423r 1               
000423r 1               	;Setup vert mirroring
000423r 1  A9 00        	lda #0
000425r 1  8D 00 A0     	sta $A000
000428r 1               	;Clear vBlankSubHandler
000428r 1  85 rr        	sta vBlankSubHandler
00042Ar 1               
00042Ar 1               
00042Ar 1  A9 88                lda #%10001000
00042Cr 1  8D 00 20             sta $2000
00042Fr 1  A9 1E                lda #%00011110
000431r 1  8D 01 20             sta $2001
000434r 1  A9 40 85 rr  	SetRTIIRQ
000438r 1  58           	cli
000439r 1               
000439r 1               .proc MainLoop
000439r 1               
000439r 1  20 rr rr     	FPA_RAND
00043Cr 1  A5 rr C5 rr          WaitForVBlank
000440r 1  F0 FC        
000442r 1               
000442r 1                       ;;;;;;;;;;;;VBLANK LAND!
000442r 1  A5 rr        	lda	vBlankSubHandler
000444r 1  20 rr rr             jsr vBlankSubHandlerDispatcher
000447r 1  A2 05 8E 14          NES_DMASPRITES
00044Br 1  40 A2 FC 86  
00044Fr 1  rr           
000450r 1               	;;;;;;;;;;;;END OF VBLANK LAND!
000450r 1               
000450r 1  A5 rr                lda joyStatus
000452r 1  48           	pha
000453r 1               
000453r 1  A9 01        	lda #1
000455r 1  85 rr        	sta micStatus
000457r 1               
000457r 1                       ;Read Joystick
000457r 1  A9 01                lda #$1
000459r 1  8D 16 40     		sta $4016
00045Cr 1  A9 00        		lda #$0
00045Er 1  8D 16 40     		sta $4016
000461r 1  A2 08        		ldx #$8
000463r 1               		:
000463r 1  AD 16 40     			lda $4016
000466r 1  4A           			lsr
000467r 1  66 rr        			ror joyStatus
000469r 1  4A           			lsr
00046Ar 1  29 01        			and #1
00046Cr 1  D0 04        			bne :+
00046Er 1  A9 00        				lda #0
000470r 1  85 rr        				sta micStatus
000472r 1               			:
000472r 1  CA           			dex
000473r 1  D0 EE                bne :--
000475r 1  68           	pla
000476r 1  49 FF                eor #$FF
000478r 1  25 rr                and joyStatus
00047Ar 1  85 rr                sta joyStatusLock
00047Cr 1               
00047Cr 1               
00047Cr 1  A5 rr        	lda mode
00047Er 1  20 rr rr             jsr SuperMagicMainLoopDispatcher
000481r 1  20 rr rr     	jsr NES::clearRemainingSprites
000484r 1               
000484r 1               
000484r 1  4C rr rr             jmp MainLoop
000487r 1               .endproc
000487r 1               
000487r 1               SetTitleScreen:
000487r 1  A9 00                lda #0
000489r 1  8D 01 20             sta $2001
00048Cr 1  85 rr        	sta vBlankSubHandler
00048Er 1               
00048Er 1  A9 40 85 rr  	SetRTIIRQ
000492r 1               
000492r 1  A9 06 8D 00  	SetMinisongsBanks
000496r 1  80 8D 01 80  
00049Ar 1  A9 07 8D 00  
0004A2r 1               
0004A2r 1               	;Setup vert mirroring
0004A2r 1  A9 00        	lda #0
0004A4r 1  8D 00 A0     	sta $A000
0004A7r 1               
0004A7r 1  A9 00        	lda #0
0004A9r 1  8D rr rr     	sta language
0004ACr 1               
0004ACr 1  8D rr rr     	sta jgd+TitleScreenData::bspos
0004AFr 1  8D rr rr     	sta jgd+TitleScreenData::fskip
0004B2r 1               
0004B2r 1  A2 00 A9 00  	NES_MMC3SetBank #NES::MMC3TARGETS::CHRx0000, #0
0004B6r 1  20 rr rr     
0004B9r 1  A2 02 A9 01  	NES_MMC3SetBank #NES::MMC3TARGETS::CHRx0800, #2
0004BDr 1  20 rr rr     
0004C0r 1               
0004C0r 1               	;;Setup banks
0004C0r 1  A2 00        	ldx #0
0004C2r 1  A9 82        	lda #$82
0004C4r 1  20 rr rr     	jsr NES::MMC3SetBank
0004C7r 1  A2 01        	ldx #1
0004C9r 1  A9 83        	lda #$83
0004CBr 1  20 rr rr     	jsr NES::MMC3SetBank
0004CEr 1  A2 02        	ldx #2
0004D0r 1  A9 84        	lda #$84
0004D2r 1  20 rr rr     	jsr NES::MMC3SetBank
0004D5r 1  A2 18        	ldx #24
0004D7r 1  A9 85        	lda #$85
0004D9r 1  20 rr rr     	jsr NES::MMC3SetBank
0004DCr 1               
0004DCr 1               
0004DCr 1  A2 rr A0 rr          NES_loadPalette    PAL_title
0004E0r 1  20 rr rr     
0004E3r 1  A2 rr A0 rr          NES_loadNametableC NAM_title,0
0004E7r 1  A9 20 20 rr  
0004EBr 1  rr           
0004ECr 1               
0004ECr 1  A9 rr        	lda #<minisongs_musicdata
0004EEr 1  8D rr rr     	sta ft_music_addr
0004F1r 1  A9 rr        	lda #>minisongs_musicdata
0004F3r 1  8D rr rr     	sta ft_music_addr+1
0004F6r 1               
0004F6r 1  A2 00        	ldx #0
0004F8r 1  A9 00        	lda #0
0004FAr 1  20 rr rr             jsr ft_music_init
0004FDr 1               
0004FDr 1  A9 01                lda #Mode_TitleScreen
0004FFr 1  85 rr                sta mode
000501r 1  A9 80        	lda #%10000000
000503r 1  8D 00 20             sta $2000
000506r 1  A9 1E                lda #%00011110
000508r 1  8D 01 20             sta $2001
00050Br 1  60                   rts
00050Cr 1               
00050Cr 1               TitleScreen:
00050Cr 1               
00050Cr 1  A5 rr A8 38  	NES_SETNEXTSPRITE #176,#87,#$86,#1
000510r 1  E9 04 85 rr  
000514r 1  A9 57 99 rr  
000528r 1  A5 rr A8 38  	NES_SETNEXTSPRITE #160,#79,#$77,#0
00052Cr 1  E9 04 85 rr  
000530r 1  A9 4F 99 rr  
000544r 1  A5 rr A8 38  	NES_SETNEXTSPRITE #148,#82,#$7E,#1
000548r 1  E9 04 85 rr  
00054Cr 1  A9 52 99 rr  
000560r 1  A5 rr A8 38  	NES_SETNEXTSPRITE #187,#93,#$80,#1
000564r 1  E9 04 85 rr  
000568r 1  A9 5D 99 rr  
00057Cr 1  A5 rr A8 38  	NES_SETNEXTSPRITE #184,#81,#$8B,#3
000580r 1  E9 04 85 rr  
000584r 1  A9 51 99 rr  
000598r 1  A5 rr A8 38  	NES_SETNEXTSPRITE #160,#79,#$8C,#3
00059Cr 1  E9 04 85 rr  
0005A0r 1  A9 4F 99 rr  
0005B4r 1  A5 rr A8 38  	NES_SETNEXTSPRITE #192,#81,#$95,#3
0005B8r 1  E9 04 85 rr  
0005BCr 1  A9 51 99 rr  
0005D0r 1               
0005D0r 1  A5 rr A8 38  	NES_SETNEXTSPRITE #(8*1),#(8*3-1),#$A0,#2
0005D4r 1  E9 04 85 rr  
0005D8r 1  A9 17 99 rr  
0005ECr 1  A5 rr A8 38  	NES_SETNEXTSPRITE #(8*1),#(8*22-1),#$B0,#2
0005F0r 1  E9 04 85 rr  
0005F4r 1  A9 AF 99 rr  
000608r 1  A5 rr A8 38  	NES_SETNEXTSPRITE #(8*30),#(8*3-1),#$A1,#2
00060Cr 1  E9 04 85 rr  
000610r 1  A9 17 99 rr  
000624r 1  A5 rr A8 38  	NES_SETNEXTSPRITE #(8*30),#(8*22-1),#$B1,#2
000628r 1  E9 04 85 rr  
00062Cr 1  A9 AF 99 rr  
000640r 1               
000640r 1               
000640r 1  20 rr rr     	jsr ft_music_play
000643r 1               
000643r 1  AD rr rr     	lda jgd+TitleScreenData::fskip
000646r 1  D0 19        	bne :+
000648r 1  A9 02        		lda #2
00064Ar 1  8D rr rr     		sta jgd+TitleScreenData::fskip
00064Dr 1  EE rr rr     		inc jgd+TitleScreenData::bspos
000650r 1  AD rr rr     		lda jgd+TitleScreenData::bspos
000653r 1  29 07        		and #7
000655r 1  8D rr rr     		sta jgd+TitleScreenData::bspos
000658r 1  18 69 18     		clcadc #24
00065Br 1  AA           		tax
00065Cr 1  A9 85        		lda #$85
00065Er 1  20 rr rr     		jsr NES::MMC3SetBank
000661r 1               	:
000661r 1  CE rr rr     	dec jgd+TitleScreenData::fskip
000664r 1               
000664r 1  A9 08                lda #NES::JOY::START
000666r 1  25 rr                and joyStatusLock
000668r 1  F0 04                beq :+
00066Ar 1  A9 06        	    lda #Mode_NewGame
00066Cr 1  85 rr                    sta mode
00066Er 1                       :
00066Er 1  60                   rts
00066Fr 1               
00066Fr 1               
00066Fr 1               NewGame:
00066Fr 1  A9 00        	lda #0
000671r 1  8D rr rr     	sta curSong
000674r 1  A9 00        	lda #cutscene_destroyed_city
000676r 1  8D rr rr     	sta curCutscene
000679r 1  A9 04        	lda #Mode_CutSceneLoad
00067Br 1  85 rr        	sta mode
00067Dr 1  60           	rts
00067Er 1               
00067Er 1               
00067Er 1               ;In->Puntero a la posicion actual de memoria
00067Er 1               .proc executeCommands
00067Er 1               
00067Er 1  AD rr rr     	lda jgd+JumpGameData::cmdCount
000681r 1  C9 FF        	cmp #$ff
000683r 1  D0 01        	bne :+
000685r 1  60           		rts
000686r 1               	:
000686r 1  AD rr rr     	lda jgd+JumpGameData::cmdCount
000689r 1  F0 04        	beq :+
00068Br 1  CE rr rr     			dec jgd+JumpGameData::cmdCount
00068Er 1  60           			rts
00068Fr 1               	:
00068Fr 1               
00068Fr 1               	doCommand:
00068Fr 1               
00068Fr 1  E6 rr D0 02  	FPA_INC_16 csStrAddr
000693r 1  E6 rr        
000695r 1  A0 00        	ldy #0
000697r 1  B1 rr        	lda (csStrAddr),y
000699r 1  29 80        	and #$80
00069Br 1  D0 08        	bne :+
00069Dr 1  B1 rr        		lda (csStrAddr),y
00069Fr 1  8D rr rr     		sta jgd+JumpGameData::cmdCount
0006A2r 1  4C rr rr     		jmp executeCommands
0006A5r 1               	:
0006A5r 1               
0006A5r 1               	;DO STUFF
0006A5r 1  B1 rr        	lda (csStrAddr),y
0006A7r 1  C9 FF        	cmp #$FF
0006A9r 1  D0 04        	bne :+
0006ABr 1  8D rr rr     		sta jgd+JumpGameData::cmdCount
0006AEr 1  60           		rts
0006AFr 1               	:
0006AFr 1  C9 81        	cmp #$81
0006B1r 1  D0 0B        	bne :+
0006B3r 1  E6 rr D0 02  		FPA_INC_16 csStrAddr
0006B7r 1  E6 rr        
0006B9r 1  B1 rr        		lda (csStrAddr),y
0006BBr 1  8D rr rr     		sta jgd+JumpGameData::lyLines
0006BEr 1               	:
0006BEr 1  C9 82        	cmp #$82
0006C0r 1  D0 0B        	bne :+
0006C2r 1  E6 rr D0 02  		FPA_INC_16 csStrAddr
0006C6r 1  E6 rr        
0006C8r 1  B1 rr        		lda (csStrAddr),y
0006CAr 1  8D rr rr     		sta jgd+JumpGameData::lyLines+1
0006CDr 1               	:
0006CDr 1               
0006CDr 1               
0006CDr 1  4C rr rr     	jmp doCommand
0006D0r 1               
0006D0r 1               
0006D0r 1  60           	rts
0006D1r 1               .endproc
0006D1r 1               
0006D1r 1               ;In->Puntero a la posicion actual de memoria
0006D1r 1               ;En A la cuenta actual
0006D1r 1               ;devuevle en A el count actual
0006D1r 1               ;devuelve en X el block actual. (0: empty, 1: beat,3 hold, ff: finish song)
0006D1r 1               ;Si es necesario aumenta al puntero.
0006D1r 1               .proc __GetNextBlock
0006D1r 1  29 FF        		and #$FF
0006D3r 1  F0 07        		beq :+
0006D5r 1  38 E9 01     			secsbc #1
0006D8r 1  48           			pha
0006D9r 1  4C rr rr     			jmp SetUpX
0006DCr 1               		:
0006DCr 1  E6 rr D0 02  		FPA_INC_16 csStrAddr
0006E0r 1  E6 rr        
0006E2r 1  A0 00        		ldy #0
0006E4r 1  B1 rr        		lda (csStrAddr),y
0006E6r 1  D0 05        		bne :+
0006E8r 1  A2 FF        			ldx #$FF
0006EAr 1  A9 7F        			lda #$7F
0006ECr 1  60           			rts
0006EDr 1               		:
0006EDr 1  29 7F        		and #$7F
0006EFr 1  38 E9 01     		secsbc #1
0006F2r 1  48           		pha
0006F3r 1               	SetUpX:
0006F3r 1  A0 00        		ldy #0
0006F5r 1  B1 rr        		lda (csStrAddr),y
0006F7r 1  29 80        		and #$80
0006F9r 1  F0 04        		beq :+
0006FBr 1  A2 01        			ldx #1
0006FDr 1  68           			pla
0006FEr 1  60           			rts
0006FFr 1               		:
0006FFr 1  A2 00        			ldx #0
000701r 1  68           			pla
000702r 1  60           			rts
000703r 1               .endproc
000703r 1               
000703r 1               
000703r 1               ;Devuelve en A el block actual
000703r 1               .macro GetNextBlock pos,count
000703r 1               		MEMCPY csStrAddr,pos,#2
000703r 1               		lda count
000703r 1               		jsr __GetNextBlock
000703r 1               		sta count
000703r 1               		phx
000703r 1               		MEMCPY pos,csStrAddr,#2
000703r 1               		pla
000703r 1               .endmacro
000703r 1               
000703r 1               MemCpyZP:
000703r 1               	   :
000703r 1  88           	    dey
000704r 1  B1 rr        		lda (csStrAddr),y
000706r 1  91 rr        		sta (csStrAddr2),y
000708r 1  C0 FF        		cpy #$FF
00070Ar 1  D0 F7        		bne :-
00070Cr 1  60           		rts
00070Dr 1               
00070Dr 1               .macro MEMCPYZP N
00070Dr 1               		phy
00070Dr 1               		ldy N
00070Dr 1               		jsr MemCpyZP
00070Dr 1               		ply
00070Dr 1               .endmacro
00070Dr 1               
00070Dr 1               .macro SET_ADDR DST,SRC
00070Dr 1               		lda #<(SRC)
00070Dr 1               		sta DST
00070Dr 1               		lda #>(SRC)
00070Dr 1               		sta DST+1
00070Dr 1               .endmacro
00070Dr 1               
00070Dr 1               .macro SET_YNDX_ADDR DST,SRC1,SRC2
00070Dr 1               		lda SRC1,y
00070Dr 1               		sta DST
00070Dr 1               		lda SRC2,y
00070Dr 1               		sta DST+1
00070Dr 1               .endmacro
00070Dr 1               
00070Dr 1               .macro MEMCPYZP_YNDX DST,SRC1,SRC2,N
00070Dr 1               	  SET_YNDX_ADDR csStrAddr,SRC1,SRC2
00070Dr 1               	  SET_ADDR csStrAddr2,DST
00070Dr 1               	  MEMCPYZP N
00070Dr 1               .endmacro
00070Dr 1               
00070Dr 1               
00070Dr 1               SetJumpGame:
00070Dr 1  A9 00        		lda #0
00070Fr 1  8D 01 20             sta $2001
000712r 1               
000712r 1  A9 40 85 rr  		SetIRQAddr JumpGameIRQ
000716r 1  A9 rr 85 rr  
00071Ar 1  A9 rr 85 rr  
000722r 1               		;Setup vert mirroring
000722r 1  A9 00        		lda #0
000724r 1  8D 00 A0     		sta $A000
000727r 1               
000727r 1               		;LOAD DATA FOR THE CURRENT SONG
000727r 1  AC rr rr     		ldy curSong
00072Ar 1               
00072Ar 1               		;musicdata
00072Ar 1  B9 rr rr     		lda SDList_MusicLo,y
00072Dr 1  8D rr rr     		sta ft_music_addr
000730r 1  B9 rr rr     		lda SDList_MusicHi,y
000733r 1  8D rr rr     		sta ft_music_addr+1
000736r 1               		;banks
000736r 1  A9 06        		lda #6
000738r 1  8D 00 80     		sta $8000
00073Br 1  B9 rr rr     		lda SDList_Bank1,y
00073Er 1  8D 01 80     		sta $8001
000741r 1  A9 07        		lda #7
000743r 1  8D 00 80     		sta $8000
000746r 1  B9 rr rr     		lda SDList_Bank2,y
000749r 1  8D 01 80     		sta $8001
00074Cr 1               		;commands
00074Cr 1  B9 rr rr     		lda SDList_CommandsLo,y
00074Fr 1  8D rr rr     		sta jgd+JumpGameData::cmdPos
000752r 1  B9 rr rr     		lda SDList_CommandsHi,y
000755r 1  8D rr rr     		sta jgd+JumpGameData::cmdPos+1
000758r 1  18 AD rr rr  		FPA_ADD_16 jgd+JumpGameData::cmdPos,MinusOne16
00075Cr 1  6D rr rr 8D  
000760r 1  rr rr AD rr  
00076Br 1               		;beats
00076Br 1  B9 rr rr     		lda SDList_BeatsLo,y
00076Er 1  8D rr rr     		sta jgd+JumpGameData::blockPos
000771r 1  B9 rr rr     		lda SDList_BeatsHi,y
000774r 1  8D rr rr     		sta jgd+JumpGameData::blockPos+1
000777r 1  18 AD rr rr  		FPA_ADD_16 jgd+JumpGameData::blockPos,MinusOne16
00077Br 1  6D rr rr 8D  
00077Fr 1  rr rr AD rr  
00078Ar 1  AD rr rr 8D  		MEMCPY jgd+JumpGameData::blockPos30,jgd+JumpGameData::blockPos,#2
00078Er 1  rr rr AD rr  
000792r 1  rr 8D rr rr  
000796r 1               
000796r 1  B9 rr rr 85  		MEMCPYZP_YNDX jgd+JumpGameData::pI,SDList_pILo,SDList_pIHi,#3
00079Ar 1  rr B9 rr rr  
00079Er 1  85 rr A9 rr  
0007B1r 1  B9 rr rr 85  		MEMCPYZP_YNDX jgd+JumpGameData::points,SDList_pointsLo,SDList_pointsHi,#3
0007B5r 1  rr B9 rr rr  
0007B9r 1  85 rr A9 rr  
0007CCr 1  B9 rr rr 85  		MEMCPYZP_YNDX jgd+JumpGameData::pointsMinus,SDList_pointsMinusLo,SDList_pointsMinusHi,#3
0007D0r 1  rr B9 rr rr  
0007D4r 1  85 rr A9 rr  
0007E7r 1               
0007E7r 1  B9 rr rr 85  		SET_YNDX_ADDR csStrAddr3,SDList_StringsLoLo,SDList_StringsLoHi
0007EBr 1  rr B9 rr rr  
0007EFr 1  85 rr        
0007F1r 1  B9 rr rr 85  		SET_YNDX_ADDR csStrAddr4,SDList_StringsHiLo,SDList_StringsHiHi
0007F5r 1  rr B9 rr rr  
0007F9r 1  85 rr        
0007FBr 1               
0007FBr 1               
0007FBr 1               		;;SET BANKS
0007FBr 1  A2 10        		ldx #16
0007FDr 1  A9 82                lda #$82
0007FFr 1  20 rr rr     		jsr NES::MMC3SetBank
000802r 1  A2 18        		ldx #24
000804r 1  A9 83                lda #$83
000806r 1  20 rr rr     		jsr NES::MMC3SetBank
000809r 1  A2 0A        		ldx #10
00080Br 1  A9 84                lda #$84
00080Dr 1  20 rr rr     		jsr NES::MMC3SetBank
000810r 1  A2 0B        		ldx #11
000812r 1  A9 85                lda #$85
000814r 1  20 rr rr     		jsr NES::MMC3SetBank
000817r 1  A2 04        		ldx #4
000819r 1  A9 80                lda #$80
00081Br 1  20 rr rr     		jsr NES::MMC3SetBank
00081Er 1  A2 06        		ldx #6
000820r 1  A9 81                lda #$81
000822r 1  20 rr rr     		jsr NES::MMC3SetBank
000825r 1               
000825r 1  A2 rr A0 rr  		NES_loadPalette PAL_ingame
000829r 1  20 rr rr     
00082Cr 1               
00082Cr 1  A9 00        		lda #0
00082Er 1               		;Init block counter
00082Er 1  8D rr rr 8D  		EXPANDED_MEMSET jgd+JumpGameData::insertPoint,2
000832r 1  rr rr        
000834r 1  8D rr rr     		sta jgd+JumpGameData::needForInsert
000837r 1               
000837r 1  8D rr rr 8D  		EXPANDED_MEMSET jgd+JumpGameData::scroll,3
00083Br 1  rr rr 8D rr  
00083Fr 1  rr           
000840r 1  8D rr rr 8D  		EXPANDED_MEMSET jgd+JumpGameData::uSpriteCounter,3
000844r 1  rr rr 8D rr  
000848r 1  rr           
000849r 1  8D rr rr 8D  		EXPANDED_MEMSET jgd+JumpGameData::lyLines,2
00084Dr 1  rr rr        
00084Fr 1  8D rr rr 8D  		EXPANDED_MEMSET jgd+JumpGameData::score,3
000853r 1  rr rr 8D rr  
000857r 1  rr           
000858r 1               
000858r 1  8D rr rr     		sta jgd+JumpGameData::blockCount
00085Br 1  8D rr rr     		sta jgd+JumpGameData::blockCount30
00085Er 1  8D rr rr     		sta jgd+JumpGameData::cmdCount
000861r 1               
000861r 1  A9 FF        		lda #$FF
000863r 1  8D rr rr     		sta jgd+JumpGameData::DeathCounter
000866r 1               
000866r 1  A9 01        		lda #1
000868r 1  85 rr        		sta vBlankSubHandler
00086Ar 1               
00086Ar 1  A2 0F        		ldx #$0F
00086Cr 1  A9 20        		lda #$20
00086Er 1  20 rr rr     		jsr NES::fillNametable
000871r 1               
000871r 1  A2 0F        		ldx #$0F
000873r 1  A9 24        		lda #$24
000875r 1  20 rr rr     		jsr NES::fillNametable
000878r 1               
000878r 1  A2 00        		ldx #0
00087Ar 1  A9 00        		lda #0
00087Cr 1  20 rr rr     	        jsr ft_music_init
00087Fr 1               
00087Fr 1  A9 22        		lda #$22
000881r 1  8D 06 20     		sta $2006
000884r 1  A9 80        		lda #$80
000886r 1  8D 06 20     		sta $2006
000889r 1               
000889r 1  A9 01        		lda #$1
00088Br 1               
00088Br 1  A0 20        		ldy #32
00088Dr 1               		:
00088Dr 1  8D 07 20     		    sta $2007
000890r 1  88           			dey
000891r 1  D0 FA        		bne :-
000893r 1               
000893r 1               		;Pre-consumption of blocks.
000893r 1  A0 18        		ldy #24
000895r 1               		:
000895r 1  98 48        			phy
000897r 1  AD rr rr 85  			GetNextBlock jgd+JumpGameData::blockPos30,jgd+JumpGameData::blockCount30
00089Br 1  rr AD rr rr  
00089Fr 1  85 rr AD rr  
0008B7r 1  68 A8        			ply
0008B9r 1  88           			dey
0008BAr 1  D0 D9        		bne :-
0008BCr 1               
0008BCr 1               
0008BCr 1  A9 03        		lda #Mode_JumpGame
0008BEr 1  85 rr                sta mode
0008C0r 1  A9 88        		lda #%10001000
0008C2r 1  8D 00 20             sta $2000
0008C5r 1  A9 1E                lda #%00011110
0008C7r 1  8D 01 20             sta $2001
0008CAr 1  60           		rts
0008CBr 1               
0008CBr 1               .proc JumpGame
0008CBr 1               		sy_temp=1
0008CBr 1               		beat_input=2
0008CBr 1               		cur_beat=3
0008CBr 1               
0008CBr 1  20 rr rr     		jsr ft_music_play
0008CEr 1               
0008CEr 1  AD rr rr 8D  		MEMCPY jgd+JumpGameData::prevInsertPoint,jgd+JumpGameData::insertPoint,#2
0008D2r 1  rr rr AD rr  
0008D6r 1  rr 8D rr rr  
0008DAr 1  18 AD rr rr  		FPA_ADD_24 jgd+JumpGameData::scroll,jgd+JumpGameData::pI
0008DEr 1  6D rr rr 8D  
0008E2r 1  rr rr AD rr  
0008F6r 1  AD rr rr 8D  		MEMCPY jgd+JumpGameData::insertPoint,jgd+JumpGameData::scroll+1,#2
0008FAr 1  rr rr AD rr  
0008FEr 1  rr 8D rr rr  
000902r 1  18 6E rr rr  		FPA_LSR_16 jgd+JumpGameData::insertPoint
000906r 1  6E rr rr     
000909r 1  18 6E rr rr  		FPA_LSR_16 jgd+JumpGameData::insertPoint
00090Dr 1  6E rr rr     
000910r 1  18 6E rr rr  		FPA_LSR_16 jgd+JumpGameData::insertPoint
000914r 1  6E rr rr     
000917r 1               
000917r 1  A9 1F        		lda #31
000919r 1  18 6D rr rr          	FPA_ADD_16_A jgd+JumpGameData::insertPoint
00091Dr 1  8D rr rr A9  
000921r 1  00 6D rr rr  
000928r 1               
000928r 1               
000928r 1               		;Find if tile insertion is needed for scrolling
000928r 1  AD rr rr     		lda jgd+JumpGameData::insertPoint
00092Br 1  CD rr rr     		cmp jgd+JumpGameData::prevInsertPoint
00092Er 1  D0 03        		bne :+
000930r 1  4C rr rr     			jmp ElseEndOfInsertion
000933r 1               		:
000933r 1  18 69 01     		clcadc #1
000936r 1  29 3F        		and #$3F
000938r 1  A8           		tay
000939r 1  29 20        		and #32
00093Br 1  D0 05        		bne :+
00093Dr 1  A9 21        			lda #$21
00093Fr 1  4C rr rr     			jmp :++
000942r 1               		:
000942r 1  A9 25        			lda #$25
000944r 1               		:
000944r 1  8D rr rr     		sta jgd+JumpGameData::whereToInsert+1
000947r 1  98           		tya
000948r 1  29 1F        		and #$1F
00094Ar 1  18 69 A0     		clcadc #$A0
00094Dr 1  8D rr rr     		sta jgd+JumpGameData::whereToInsert
000950r 1               
000950r 1               		;Do Commands
000950r 1  AD rr rr 85  		MEMCPY csStrAddr,jgd+JumpGameData::cmdPos,#2
000954r 1  rr AD rr rr  
000958r 1  85 rr        
00095Ar 1  20 rr rr     		jsr executeCommands
00095Dr 1  A5 rr 8D rr  		MEMCPY jgd+JumpGameData::cmdPos,csStrAddr,#2
000961r 1  rr A5 rr 8D  
000965r 1  rr rr        
000967r 1               
000967r 1               		;Get beat blocks
000967r 1  AD rr rr 85  		GetNextBlock jgd+JumpGameData::blockPos,jgd+JumpGameData::blockCount
00096Br 1  rr AD rr rr  
00096Fr 1  85 rr AD rr  
000987r 1               
000987r 1  C9 FF        		cmp #$FF
000989r 1  D0 0A        		bne :+
00098Br 1  A9 00        			lda #0
00098Dr 1  8D 01 20     			sta $2001
000990r 1  A9 00        			lda #0
000992r 1  8D rr rr     			sta jgd+JumpGameData::DeathCounter
000995r 1               		:
000995r 1  8D rr rr     		sta jgd+JumpGameData::curBeat
000998r 1               
000998r 1               
000998r 1  A9 00        		lda #0
00099Ar 1  8D rr rr     		sta jgd+JumpGameData::beatScored
00099Dr 1               
00099Dr 1  AD rr rr 85  		GetNextBlock jgd+JumpGameData::blockPos30,jgd+JumpGameData::blockCount30
0009A1r 1  rr AD rr rr  
0009A5r 1  85 rr AD rr  
0009BDr 1  C9 FF        		cmp #$FF
0009BFr 1  F0 1C        		beq :+
0009C1r 1  29 FF        		and #$FF
0009C3r 1  F0 18        		beq :+
0009C5r 1  A9 rr 85 rr  			MEMCPY jgd+JumpGameData::tilesForInsert,JumpColumnPylon1,#8
0009C9r 1  A9 rr 85 rr  
0009CDr 1  A9 rr 85 rr  
0009DAr 1  4C rr rr     			jmp :++
0009DDr 1               		:
0009DDr 1  A9 rr 85 rr  			MEMCPY jgd+JumpGameData::tilesForInsert,JumpColumnEmpty,#8
0009E1r 1  A9 rr 85 rr  
0009E5r 1  A9 rr 85 rr  
0009F2r 1               		:
0009F2r 1               
0009F2r 1               
0009F2r 1  AD rr rr     		lda jgd+JumpGameData::DeathCounter
0009F5r 1  30 0F        		bmi :++
0009F7r 1  EE rr rr     			inc jgd+JumpGameData::DeathCounter
0009FAr 1  AD rr rr     			lda jgd+JumpGameData::DeathCounter
0009FDr 1  C9 7F        			cmp #$7F
0009FFr 1  D0 05        			bne :+
000A01r 1  A9 07        				lda #Mode_SelectSongResult
000A03r 1  85 rr        				sta mode
000A05r 1  60           				rts
000A06r 1               			:
000A06r 1               		:
000A06r 1               
000A06r 1               
000A06r 1               
000A06r 1  A9 01        		lda #1
000A08r 1  8D rr rr     		sta jgd+JumpGameData::needForInsert
000A0Br 1               
000A0Br 1               
000A0Br 1  4C rr rr     		jmp EndOfInsertion
000A0Er 1               		ElseEndOfInsertion:
000A0Er 1  A9 00        		lda #0
000A10r 1  8D rr rr     		sta jgd+JumpGameData::needForInsert
000A13r 1               		EndOfInsertion:
000A13r 1               
000A13r 1               		;Read input
000A13r 1  A9 02        		lda #NES::JOY::BUT_B
000A15r 1  25 rr        		and joyStatus
000A17r 1  05 rr        			ora micStatus
000A19r 1  F0 05        		beq :+
000A1Br 1  A2 01        				ldx #1
000A1Dr 1  4C rr rr     				jmp :++
000A20r 1               		:
000A20r 1  A2 00        			ldx #0
000A22r 1               		:
000A22r 1               
000A22r 1               		;Score continuous input
000A22r 1  A9 00        		lda #0
000A24r 1  8D rr rr     		sta jgd+JumpGameData::scY
000A27r 1               
000A27r 1  AD rr rr     		lda jgd+JumpGameData::beatScored
000A2Ar 1  D0 5F        		bne :++++
000A2Cr 1  E0 01        			cpx #1
000A2Er 1  D0 5B        			bne :+++
000A30r 1  AD rr rr     				lda jgd+JumpGameData::curBeat
000A33r 1  F0 1F        				beq :+
000A35r 1  18 AD rr rr  					FPA_ADD_24 jgd+JumpGameData::score,jgd+JumpGameData::points
000A39r 1  6D rr rr 8D  
000A3Dr 1  rr rr AD rr  
000A51r 1  4C rr rr     					jmp :++
000A54r 1               				:
000A54r 1  AD rr rr     					lda FPA::RandomValue
000A57r 1  29 03        					and #3
000A59r 1  8D rr rr     					sta jgd+JumpGameData::scY
000A5Cr 1  18 AD rr rr  					FPA_ADD_24 jgd+JumpGameData::score,jgd+JumpGameData::pointsMinus
000A60r 1  6D rr rr 8D  
000A64r 1  rr rr AD rr  
000A78r 1  AD rr rr     					lda jgd+JumpGameData::score+2
000A7Br 1  10 0B        					bpl :+
000A7Dr 1  A9 00        						lda #0
000A7Fr 1  8D rr rr 8D  						EXPANDED_MEMSET jgd+JumpGameData::score,3
000A83r 1  rr rr 8D rr  
000A87r 1  rr           
000A88r 1               				:
000A88r 1  EE rr rr     				inc jgd+JumpGameData::beatScored
000A8Br 1               			:
000A8Br 1               		:
000A8Br 1               
000A8Br 1               
000A8Br 1               		;If not locked and jump is on, jump
000A8Br 1  A9 00        		lda #0
000A8Dr 1  85 rr        		sta scratch+beat_input
000A8Fr 1  AC rr rr     		ldy jgd+JumpGameData::beatLock
000A92r 1  E0 00        		cpx #0
000A94r 1  D0 03        		bne :+
000A96r 1               			;clear
000A96r 1  4C rr rr     		jmp :+++
000A99r 1               		:
000A99r 1               			;not clear
000A99r 1  C0 00        			cpy #0
000A9Br 1  D0 02        			bne :+
000A9Dr 1  E6 rr        				inc scratch+beat_input
000A9Fr 1               			:
000A9Fr 1               
000A9Fr 1               		:
000A9Fr 1               
000A9Fr 1  A9 6F        		lda #111
000AA1r 1  18 6D rr rr  		clcadc jgd+JumpGameData::scY
000AA5r 1  85 rr        		sta scratch+sy_temp
000AA7r 1               
000AA7r 1               
000AA7r 1  AD rr rr     		lda jgd+JumpGameData::scY
000AAAr 1  F0 54        		beq :+
000AACr 1  A5 rr A8 38  			NES_SETNEXTSPRITE #60,#105,#$90,#2
000AB0r 1  E9 04 85 rr  
000AB4r 1  A9 69 99 rr  
000AC8r 1  A5 rr A8 38  			NES_SETNEXTSPRITE #68,#105,#$91,#2
000ACCr 1  E9 04 85 rr  
000AD0r 1  A9 69 99 rr  
000AE4r 1  A5 rr A8 38  			NES_SETNEXTSPRITE #76,#105,#$92,#2
000AE8r 1  E9 04 85 rr  
000AECr 1  A9 69 99 rr  
000B00r 1               		:
000B00r 1               
000B00r 1  A9 00        		lda #0
000B02r 1  8D rr rr     		sta jgd+JumpGameData::scY
000B05r 1               
000B05r 1  18 AD rr rr  		FPA_ADD_24 jgd+JumpGameData::uSpriteCounter,UTACOSP
000B09r 1  6D rr rr 8D  
000B0Dr 1  rr rr AD rr  
000B21r 1  AD rr rr     		lda jgd+JumpGameData::uSpriteCounter+1
000B24r 1  C9 06 90 06  		pseudomod #6
000B28r 1  38 E9 06 4C  
000B2Cr 1  rr rr        
000B2Er 1  AA           		tax
000B2Fr 1               
000B2Fr 1               		;Build utaco sprite
000B2Fr 1  BD rr rr     		lda utaco_run_frametable_lo,x
000B32r 1  85 rr        		sta MSLAddr
000B34r 1  BD rr rr     		lda utaco_run_frametable_hi,x
000B37r 1  85 rr        		sta MSLAddr+1
000B39r 1  A9 3C        		lda #60
000B3Br 1  38 E9 10     		secsbc #16
000B3Er 1  AA           		tax
000B3Fr 1  A4 rr        		ldy scratch+sy_temp
000B41r 1  AD rr rr     		lda utaco_run_bytes_per_frame
000B44r 1  20 rr rr     		jsr LoadMetaSprite
000B47r 1               
000B47r 1  A9 04        		lda #NES::JOY::SELECT
000B49r 1  25 rr        		and joyStatusLock
000B4Br 1  F0 08        		beq :+
000B4Dr 1  EE rr rr     			inc curSong
000B50r 1  A9 02        			lda #Mode_SetJumpGame
000B52r 1  85 rr        			sta mode
000B54r 1  60           			rts
000B55r 1               		:
000B55r 1               
000B55r 1               		;Process beat bar
000B55r 1               
000B55r 1  A9 rr 85 rr  		MEMCPY jgd+JumpGameData::BeatBar1,EmptyBeatBar1,#20
000B59r 1  A9 rr 85 rr  
000B5Dr 1  A9 rr 85 rr  
000B6Ar 1  A9 rr 85 rr  		MEMCPY jgd+JumpGameData::BeatBar2,EmptyBeatBar2,#20
000B6Er 1  A9 rr 85 rr  
000B72r 1  A9 rr 85 rr  
000B7Fr 1               
000B7Fr 1  AD rr rr 85  		MEMCPY tmp3,jgd+JumpGameData::score,#3
000B83r 1  rr AD rr rr  
000B87r 1  85 rr AD rr  
000B8Er 1               
000B8Er 1  A0 00        		ldy #0
000B90r 1               
000B90r 1               	NextBarSection:
000B90r 1  98 48        		phy
000B92r 1  18 A5 rr 6D  		FPA_ADD_24 tmp3,MinusDosCincuenta24
000B96r 1  rr rr 85 rr  
000B9Ar 1  A5 rr 6D rr  
000BA8r 1  68 A8        		ply
000BAAr 1  A5 rr        		lda tmp3+2
000BACr 1  30 34        		bmi NoMoreBar
000BAEr 1               
000BAEr 1  A9 02        			lda #2
000BB0r 1  18           			clc
000BB1r 1  79 rr rr     			adc jgd+JumpGameData::BeatBar1,y
000BB4r 1  99 rr rr     			sta jgd+JumpGameData::BeatBar1,y
000BB7r 1  A9 02        			lda #2
000BB9r 1  18           			clc
000BBAr 1  79 rr rr     			adc jgd+JumpGameData::BeatBar1+1,y
000BBDr 1  99 rr rr     			sta jgd+JumpGameData::BeatBar1+1,y
000BC0r 1  A9 02        			lda #2
000BC2r 1  18           			clc
000BC3r 1  79 rr rr     			adc jgd+JumpGameData::BeatBar2,y
000BC6r 1  99 rr rr     			sta jgd+JumpGameData::BeatBar2,y
000BC9r 1  A9 02        			lda #2
000BCBr 1  18           			clc
000BCCr 1  79 rr rr     			adc jgd+JumpGameData::BeatBar2+1,y
000BCFr 1  99 rr rr     			sta jgd+JumpGameData::BeatBar2+1,y
000BD2r 1               
000BD2r 1               
000BD2r 1  B9 rr rr     			lda jgd+JumpGameData::BeatBar1,y
000BD5r 1  C9 4A        			cmp #$4A
000BD7r 1  D0 06        			bne :+
000BD9r 1  C8           				iny
000BDAr 1  C8           				iny
000BDBr 1  C0 14        				cpy #20
000BDDr 1  F0 03        				beq NoMoreBar
000BDFr 1               			:
000BDFr 1  4C rr rr     			jmp NextBarSection
000BE2r 1               
000BE2r 1               		NoMoreBar:
000BE2r 1               
000BE2r 1               		;Load lines
000BE2r 1               
000BE2r 1               
000BE2r 1               
000BE2r 1  AC rr rr     		ldy jgd+JumpGameData::lyLines
000BE5r 1  B1 rr        		lda (csStrAddr3),y
000BE7r 1  85 rr        		sta csStrAddr
000BE9r 1  B1 rr        		lda (csStrAddr4),y
000BEBr 1  85 rr        		sta csStrAddr+1
000BEDr 1  AC rr rr     		ldy jgd+JumpGameData::lyLines+1
000BF0r 1  B1 rr        		lda (csStrAddr3),y
000BF2r 1  85 rr        		sta csStrAddr2
000BF4r 1  B1 rr        		lda (csStrAddr4),y
000BF6r 1  85 rr        		sta csStrAddr2+1
000BF8r 1               
000BF8r 1               
000BF8r 1  60                   rts
000BF9r 1               .EndProc
000BF9r 1               
000BF9r 1               JumpGameVBlanker:
000BF9r 1  48           		pha
000BFAr 1  AD rr rr     		lda jgd+JumpGameData::needForInsert
000BFDr 1  F0 28        		beq NoNeedForInsert
000BFFr 1               
000BFFr 1  A0 08        			ldy #8
000C01r 1               			:
000C01r 1  AD rr rr     			lda jgd+JumpGameData::whereToInsert+1
000C04r 1  8D 06 20     			sta $2006
000C07r 1  AD rr rr     			lda jgd+JumpGameData::whereToInsert
000C0Ar 1  8D 06 20     			sta $2006
000C0Dr 1  B9 rr rr     			lda jgd+JumpGameData::tilesForInsert-1,y
000C10r 1  8D 07 20     			sta $2007
000C13r 1  A9 20        			lda #$20
000C15r 1  18 6D rr rr  			FPA_ADD_16_A jgd+JumpGameData::whereToInsert
000C19r 1  8D rr rr A9  
000C1Dr 1  00 6D rr rr  
000C24r 1  88           			dey
000C25r 1  D0 DA        			bne :-
000C27r 1               
000C27r 1               		NoNeedForInsert:
000C27r 1               
000C27r 1               		;;22c1
000C27r 1  A9 22        		lda #$22
000C29r 1  8D 06 20     		sta $2006
000C2Cr 1  A9 E1        		lda #$E1
000C2Er 1  8D 06 20     		sta $2006
000C31r 1  A0 00        		ldy #0
000C33r 1               		:
000C33r 1  B1 rr        			lda (csStrAddr),y
000C35r 1  8D 07 20     			sta $2007
000C38r 1  C8           			iny
000C39r 1  C0 1E        			cpy #30
000C3Br 1  D0 F6        			bne :-
000C3Dr 1               
000C3Dr 1               
000C3Dr 1  A9 20        		lda #$20
000C3Fr 1  8D 06 20     		sta $2006
000C42r 1  A9 42        		lda #$42
000C44r 1  8D 06 20     		sta $2006
000C47r 1  A0 EC        		ldy #($FF-20+1)
000C49r 1               		:
000C49r 1  B9 rr rr     			lda jgd+JumpGameData::BeatBar1-$FF+20-1,y
000C4Cr 1  8D 07 20     			sta $2007
000C4Fr 1  C8           			iny
000C50r 1  D0 F7        			bne :-
000C52r 1               
000C52r 1  A9 20        		lda #$20
000C54r 1  8D 06 20     		sta $2006
000C57r 1  A9 62        		lda #$62
000C59r 1  8D 06 20     		sta $2006
000C5Cr 1  A0 EC        		ldy #($FF-20+1)
000C5Er 1               		:
000C5Er 1  B9 rr rr     			lda jgd+JumpGameData::BeatBar2-$FF+20-1,y
000C61r 1  8D 07 20     			sta $2007
000C64r 1  C8           			iny
000C65r 1  D0 F7        			bne :-
000C67r 1               
000C67r 1  2C 02 20     		bit $2002
000C6Ar 1  A9 00        		lda #0
000C6Cr 1  8D 05 20     		sta $2005
000C6Fr 1  AD rr rr     		lda jgd+JumpGameData::scY
000C72r 1  8D 05 20     		sta $2005
000C75r 1  A9 88        		lda #%10001000
000C77r 1  8D 00 20     		sta $2000
000C7Ar 1               
000C7Ar 1  AD rr rr     		lda jgd+JumpGameData::scroll+1
000C7Dr 1  8D rr rr     		sta jgd+JumpGameData::frozenScrolls
000C80r 1  AD rr rr     		lda jgd+JumpGameData::scroll+2
000C83r 1  29 01        		and #1
000C85r 1  09 88        		ora #%10001000
000C87r 1  8D rr rr     		sta jgd+JumpGameData::frozenScrolls+1
000C8Ar 1               
000C8Ar 1  A9 60        		lda #((6+6)*8)
000C8Cr 1  8D 00 C0     		sta $C000
000C8Fr 1  8D 01 C0     		sta $C001
000C92r 1  8D 01 E0     		sta $E001
000C95r 1               
000C95r 1  A9 00        		lda #0
000C97r 1  8D rr rr     		sta jgd+JumpGameData::irqPos
000C9Ar 1               
000C9Ar 1               
000C9Ar 1  68            		pla
000C9Br 1  60           		rts
000C9Cr 1               
000C9Cr 1               JumpGameIRQ:
000C9Cr 1  48           		pha
000C9Dr 1  8D 00 E0     		sta $E000
000CA0r 1  AD rr rr     		lda jgd+JumpGameData::irqPos
000CA3r 1  D0 23        		bne :+
000CA5r 1  2C 02 20     			bit $2002
000CA8r 1  AD rr rr     			lda jgd+JumpGameData::frozenScrolls
000CABr 1  8D 05 20     			sta $2005
000CAEr 1  AD rr rr     			lda jgd+JumpGameData::scY
000CB1r 1  8D 05 20     			sta $2005
000CB4r 1  AD rr rr     			lda jgd+JumpGameData::frozenScrolls+1
000CB7r 1  8D 00 20     			sta $2000
000CBAr 1  A9 50        			lda #((10)*8)
000CBCr 1  8D 00 C0     			sta $C000
000CBFr 1  8D 01 C0     			sta $C001
000CC2r 1  8D 01 E0     			sta $E001
000CC5r 1  4C rr rr     			jmp :++
000CC8r 1               		:
000CC8r 1  2C 02 20     			bit $2002
000CCBr 1  A9 00        			lda #0
000CCDr 1  8D 05 20     			sta $2005
000CD0r 1  AD rr rr     			lda jgd+JumpGameData::scY
000CD3r 1  8D 05 20     			sta $2005
000CD6r 1  A9 88        			lda #%10001000
000CD8r 1  8D 00 20     			sta $2000
000CDBr 1               		:
000CDBr 1  EE rr rr     		inc jgd+JumpGameData::irqPos
000CDEr 1  68           		pla
000CDFr 1  40           		rti
000CE0r 1               
000CE0r 1               
000CE0r 1               .proc LoadMetaSprite
000CE0r 1               		sprx=6
000CE0r 1               		spry=7
000CE0r 1               		pat=8
000CE0r 1               		basex=9
000CE0r 1               		basey=10
000CE0r 1               		sc=11
000CE0r 1               		pal=12
000CE0r 1               
000CE0r 1  86 rr        		stx scratch+basex
000CE2r 1  84 rr        		sty scratch+basey
000CE4r 1  85 rr        		sta scratch+sc
000CE6r 1  A0 00        		ldy #0
000CE8r 1               
000CE8r 1               :
000CE8r 1  98           		tya
000CE9r 1  C5 rr        		cmp scratch+sc
000CEBr 1  D0 01        		bne :+
000CEDr 1  60           			rts
000CEEr 1               		:
000CEEr 1               
000CEEr 1  B1 rr        		lda (MSLAddr),y
000CF0r 1  85 rr        		sta scratch+sprx
000CF2r 1  C8           		iny
000CF3r 1  B1 rr        		lda (MSLAddr),y
000CF5r 1  85 rr        		sta scratch+spry
000CF7r 1  C8           		iny
000CF8r 1  B1 rr        		lda (MSLAddr),y
000CFAr 1  85 rr        		sta scratch+pat
000CFCr 1  C8           		iny
000CFDr 1  B1 rr        		lda (MSLAddr),y
000CFFr 1  85 rr        		sta scratch+pal
000D01r 1  C8           		iny
000D02r 1               
000D02r 1  A5 rr        		lda scratch+sprx
000D04r 1  18 65 rr     		clcadc scratch+basex
000D07r 1  85 rr        		sta scratch+sprx
000D09r 1               
000D09r 1  A5 rr        		lda scratch+spry
000D0Br 1  18 65 rr     		clcadc scratch+basey
000D0Er 1  85 rr        		sta scratch+spry
000D10r 1               
000D10r 1  98           		tya
000D11r 1  48           		pha
000D12r 1  A5 rr A8 38  		NES_SETNEXTSPRITE scratch+sprx,scratch+spry,scratch+pat,scratch+pal
000D16r 1  E9 04 85 rr  
000D1Ar 1  A5 rr 99 rr  
000D2Er 1  68           		pla
000D2Fr 1  A8           		tay
000D30r 1               
000D30r 1  4C rr rr     		jmp :--
000D33r 1               .EndProc
000D33r 1               
000D33r 1               
000D33r 1               SelectSongResult:
000D33r 1  EE rr rr     		inc curSong
000D36r 1  A9 02        		lda #Mode_SetJumpGame
000D38r 1  85 rr        		sta mode
000D3Ar 1  60           	rts
000D3Br 1               
000D3Br 1               SongPass:
000D3Br 1  60           	rts
000D3Cr 1               
000D3Cr 1               SongFail:
000D3Cr 1  60           	rts
000D3Dr 1               
000D3Dr 1               
000D3Dr 1               ResetAndLoadNextString:
000D3Dr 1               
000D3Dr 1  A9 00        		lda #$00
000D3Fr 1  8D rr rr     		sta csStringReady
000D42r 1  A9 66        		lda #$66
000D44r 1  8D rr rr     		sta csPPUPos
000D47r 1  A9 22        		lda #$22
000D49r 1  8D rr rr     		sta csPPUPos+1
000D4Cr 1  A9 02        		lda #2
000D4Er 1  8D rr rr     		sta csFrameDelay
000D51r 1  8D rr rr     		sta csFrameCounter
000D54r 1               
000D54r 1  A9 14        		lda #20
000D56r 1  8D rr rr     		sta csColCounter
000D59r 1               
000D59r 1  AC rr rr     		ldy curCutscene
000D5Cr 1  B9 rr rr     		lda cutscenes_strings_en_lo_lo,y
000D5Fr 1  85 rr        		sta NES::PtrAL
000D61r 1  B9 rr rr     		lda cutscenes_strings_en_lo_hi,y
000D64r 1  85 rr        		sta NES::PtrAH
000D66r 1  B9 rr rr     		lda cutscenes_strings_en_hi_lo,y
000D69r 1  85 rr        		sta NES::PtrBL
000D6Br 1  B9 rr rr     		lda cutscenes_strings_en_hi_hi,y
000D6Er 1  85 rr        		sta NES::PtrBH
000D70r 1               
000D70r 1               
000D70r 1               		;;; Clear cutscene area
000D70r 1  A5 rr C5 rr  		WaitForVBlank
000D74r 1  F0 FC        
000D76r 1  A9 00        		lda #0
000D78r 1  8D 01 20             sta $2001
000D7Br 1  A9 22        		lda #$22
000D7Dr 1  8D 06 20     		sta $2006
000D80r 1  A9 66        		lda #$66
000D82r 1  8D 06 20     		sta $2006
000D85r 1  A9 C0        		lda #$C0
000D87r 1  A0 F4        		ldy #$F4
000D89r 1  8D 07 20     		:	sta $2007
000D8Cr 1  88           			dey
000D8Dr 1  D0 FA        			bne :-
000D8Fr 1  20 rr rr     		jsr StandardVBlank
000D92r 1  A9 1E        		lda #%00011110
000D94r 1  8D 01 20             sta $2001
000D97r 1               
000D97r 1               
000D97r 1  EE rr rr     		inc csCurStr
000D9Ar 1  AD rr rr     		lda csCurStr ;String number for this cutscene
000D9Dr 1  A8           		tay
000D9Er 1  B1 rr        		lda (NES::PtrA),y
000DA0r 1  85 rr        		sta csStrAddr
000DA2r 1  B1 rr        		lda (NES::PtrB),y
000DA4r 1  85 rr        		sta csStrAddr+1
000DA6r 1               
000DA6r 1  60           rts
000DA7r 1               
000DA7r 1               CutSceneLoad:
000DA7r 1  A9 00        	lda #0
000DA9r 1  8D 01 20             sta $2001
000DACr 1  A9 02        	lda #2
000DAEr 1  85 rr        	sta vBlankSubHandler
000DB0r 1               
000DB0r 1  A9 40 85 rr  	SetRTIIRQ
000DB4r 1               
000DB4r 1  A9 06 8D 00  	SetMinisongsBanks
000DB8r 1  80 8D 01 80  
000DBCr 1  A9 07 8D 00  
000DC4r 1               
000DC4r 1               	;Setup vert mirroring
000DC4r 1  A9 01        	lda #1
000DC6r 1  8D 00 A0     	sta $A000
000DC9r 1               
000DC9r 1               	;Si end, goto next stage
000DC9r 1  AC rr rr     	ldy curCutscene
000DCCr 1  BE rr rr     	ldx cutscenes_commands,y
000DCFr 1  E0 FF        	cpx #$FF
000DD1r 1  D0 05        	bne :+
000DD3r 1  A9 02        		lda #Mode_SetJumpGame
000DD5r 1  85 rr        		sta mode
000DD7r 1  60           		rts
000DD8r 1               	:
000DD8r 1               
000DD8r 1               
000DD8r 1               	;; SET NAMETABLE
000DD8r 1  AC rr rr     	ldy curCutscene
000DDBr 1  BE rr rr     	ldx cutscenes_nametables_lo,y
000DDEr 1  B9 rr rr     	lda cutscenes_nametables_hi,y
000DE1r 1  A8           	tay
000DE2r 1  A9 20        	lda #$20
000DE4r 1  20 rr rr     	jsr NES::loadNametableC
000DE7r 1               
000DE7r 1               	;;SET CUTSCENE BANKS
000DE7r 1  AC rr rr     	ldy curCutscene
000DEAr 1  BE rr rr     	ldx cutscenes_banks_0,y
000DEDr 1  A9 82        	lda #$82
000DEFr 1  20 rr rr     	jsr NES::MMC3SetBank
000DF2r 1               
000DF2r 1  AC rr rr     	ldy curCutscene
000DF5r 1  BE rr rr     	ldx cutscenes_banks_1,y
000DF8r 1  A9 83        	lda #$83
000DFAr 1  20 rr rr     	jsr NES::MMC3SetBank
000DFDr 1               
000DFDr 1               	;;SET FONT BANKS
000DFDr 1  A2 0A        	ldx #10
000DFFr 1  A9 84        	lda #$84
000E01r 1  20 rr rr     	jsr NES::MMC3SetBank
000E04r 1  A2 0B        	ldx #11
000E06r 1  A9 85        	lda #$85
000E08r 1  20 rr rr     	jsr NES::MMC3SetBank
000E0Br 1               
000E0Br 1               	;;SET PALETTES
000E0Br 1  AC rr rr     	ldy curCutscene
000E0Er 1  BE rr rr     	ldx cutscenes_palettes_lo,y
000E11r 1  B9 rr rr     	lda cutscenes_palettes_hi,y
000E14r 1  A8           	tay
000E15r 1  20 rr rr     	jsr NES::loadPalette
000E18r 1               
000E18r 1  A9 FF        	lda #$FF
000E1Ar 1  8D rr rr     	sta csCurStr
000E1Dr 1  20 rr rr     	jsr ResetAndLoadNextString
000E20r 1               
000E20r 1  A9 88        	lda #%10001000
000E22r 1  8D 00 20     	sta $2000
000E25r 1  A9 1E        	lda #%00011110
000E27r 1  8D 01 20     	sta $2001
000E2Ar 1  A9 05        	lda #Mode_CutSceneLoop
000E2Cr 1  85 rr        	sta mode
000E2Er 1  60           	rts
000E2Fr 1               
000E2Fr 1               
000E2Fr 1               TextColumns=20
000E2Fr 1               
000E2Fr 1               CutSceneLoop:
000E2Fr 1               		;fade in
000E2Fr 1               		;if faded in, output text
000E2Fr 1               		;when text is over, increment scene
000E2Fr 1               		; and fade out
000E2Fr 1  AD rr rr     		lda csStringReady
000E32r 1  D0 63        		bne CSStringIsDone
000E34r 1  CE rr rr     			dec csFrameDelay
000E37r 1  D0 5E        			bne EndOfNewCharacter
000E39r 1  AD rr rr     				lda csFrameCounter
000E3Cr 1  8D rr rr     				sta csFrameDelay
000E3Fr 1  EE rr rr D0  				FPA_INC_16 csPPUPos
000E43r 1  03 EE rr rr  
000E47r 1  E6 rr D0 02  				FPA_INC_16 csStrAddr
000E4Br 1  E6 rr        
000E4Dr 1               
000E4Dr 1  A0 00        				ldy #0
000E4Fr 1  B1 rr        				lda (csStrAddr),y
000E51r 1  C9 7E        				cmp #<($FE+FontOffset)
000E53r 1  D0 27        				bne :+
000E55r 1  A9 E0        					lda #$E0
000E57r 1  2D rr rr     					and csPPUPos
000E5Ar 1  8D rr rr     					sta csPPUPos
000E5Dr 1  A9 26        					lda #38
000E5Fr 1  18 6D rr rr  					FPA_ADD_16_A csPPUPos
000E63r 1  8D rr rr A9  
000E67r 1  00 6D rr rr  
000E6Er 1  E6 rr D0 02  					FPA_INC_16 csStrAddr
000E72r 1  E6 rr        
000E74r 1  A9 14        					lda #TextColumns
000E76r 1  8D rr rr     					sta csColCounter
000E79r 1  4C rr rr     					jmp :++
000E7Cr 1               				:
000E7Cr 1  CE rr rr     					dec csColCounter
000E7Fr 1               				:
000E7Fr 1               
000E7Fr 1  D0 16        				bne :+
000E81r 1  A9 0C        					lda #$20-TextColumns
000E83r 1  18 6D rr rr  					FPA_ADD_16_A csPPUPos
000E87r 1  8D rr rr A9  
000E8Br 1  00 6D rr rr  
000E92r 1  A9 14        					lda #TextColumns
000E94r 1  8D rr rr     					sta csColCounter
000E97r 1               				:
000E97r 1               			EndOfNewCharacter:
000E97r 1               		CSStringIsDone:
000E97r 1               
000E97r 1               		;Skip on Start
000E97r 1  A9 08        		lda #NES::JOY::START
000E99r 1  25 rr        		and joyStatusLock
000E9Br 1  F0 04        		beq :+
000E9Dr 1  A9 02        		    lda #Mode_SetJumpGame
000E9Fr 1  85 rr        		    sta mode
000EA1r 1               		:
000EA1r 1               
000EA1r 1               		;Next!
000EA1r 1  A9 02        		lda #NES::JOY::BUT_B
000EA3r 1  25 rr        		and joyStatusLock
000EA5r 1  F0 1B                beq :++++
000EA7r 1  AD rr rr     			lda csStringReady
000EAAr 1  F0 11        			beq :++
000EACr 1  20 rr rr     				jsr ResetAndLoadNextString
000EAFr 1  A5 rr        				lda csStrAddr+1
000EB1r 1  D0 07        				bne :+
000EB3r 1  EE rr rr     					inc curCutscene
000EB6r 1  A9 04        					lda #Mode_CutSceneLoad
000EB8r 1  85 rr        					sta mode
000EBAr 1               				:
000EBAr 1  4C rr rr     				jmp :++
000EBDr 1               			:
000EBDr 1  A9 01        				lda #1
000EBFr 1  8D rr rr     				sta csFrameCounter
000EC2r 1               			:
000EC2r 1                       :
000EC2r 1               
000EC2r 1               		;fade out (when fade out, go to load)
000EC2r 1  60           		rts
000EC3r 1               
000EC3r 1               CutsceneVBlank:
000EC3r 1  AD rr rr     		lda csStringReady
000EC6r 1  D0 1D        		bne :++
000EC8r 1  AD rr rr     			lda csPPUPos+1
000ECBr 1  8D 06 20     			sta $2006
000ECEr 1  AD rr rr     			lda csPPUPos
000ED1r 1  8D 06 20     			sta $2006
000ED4r 1  A0 00        			ldy #0
000ED6r 1  B1 rr        			lda (csStrAddr),y
000ED8r 1  C9 7F        			cmp #<($FF+FontOffset)
000EDAr 1  D0 06        			bne :+
000EDCr 1  EE rr rr     				inc csStringReady
000EDFr 1  4C rr rr     				jmp :++
000EE2r 1               			:
000EE2r 1  8D 07 20     			sta $2007
000EE5r 1               		:
000EE5r 1               
000EE5r 1  2C 02 20     		bit $2002
000EE8r 1  A9 00        		lda #0
000EEAr 1  8D 05 20     		sta $2005
000EEDr 1  8D 05 20     		sta $2005
000EF0r 1  60           	rts
000EF1r 1               
000EF1r 1               .segment "CODE"
000EF1r 1               
000EF1r 1               StandardVBlank:
000EF1r 1  2C 02 20     		bit $2002
000EF4r 1  A9 00        		lda #0
000EF6r 1  8D 05 20     		sta $2005
000EF9r 1  8D 05 20     		sta $2005
000EFCr 1  60           	rts
000EFDr 1               
000EFDr 1               SuperMagicMainLoopDispatcher:
000EFDr 1  0A               asl
000EFEr 1  AA               tax
000EFFr 1  BD rr rr         lda MainLoopModesTable+1,x
000F02r 1  48               pha
000F03r 1  BD rr rr         lda MainLoopModesTable,x
000F06r 1  48               pha
000F07r 1  60               rts
000F08r 1               
000F08r 1               vBlankSubHandlerDispatcher:
000F08r 1  0A               asl
000F09r 1  AA               tax
000F0Ar 1  BD rr rr         lda vBlankSubHandlersTable+1,x
000F0Dr 1  48               pha
000F0Er 1  BD rr rr         lda vBlankSubHandlersTable,x
000F11r 1  48               pha
000F12r 1  60           	rts
000F13r 1               
000F13r 1               
000F13r 1               ;;||=============================================================||;;
000F13r 1               NMI:
000F13r 1  E6 rr                inc vblank
000F15r 1  40                   rti
000F16r 1               
000F16r 1               ;;||=============================================================||;;
000F16r 1               
000F16r 1               ;Consts
000F16r 1  FF FF        MinusOne16: .byte $FF,$FF
000F18r 1  00 06 FF     MinusDosCincuenta24: .byte $00,$06,$FF
000F1Br 1               
000F1Br 1  00 22        CSTextBase: .byte $00,$22
000F1Dr 1               
000F1Dr 1               MainLoopModesTable:
000F1Dr 1  rr rr        	.word SetTitleScreen-1
000F1Fr 1  rr rr        	.word TitleScreen-1
000F21r 1  rr rr        	.word SetJumpGame-1
000F23r 1  rr rr        	.word JumpGame-1
000F25r 1  rr rr        	.word CutSceneLoad-1
000F27r 1  rr rr        	.word CutSceneLoop-1
000F29r 1  rr rr        	.word NewGame-1
000F2Br 1  rr rr        	.word SelectSongResult-1
000F2Dr 1  rr rr        	.word SongPass-1
000F2Fr 1  rr rr        	.word SongFail-1
000F31r 1               
000F31r 1               Mode_SetTitleScreen=0
000F31r 1               Mode_TitleScreen=1
000F31r 1               Mode_SetJumpGame=2
000F31r 1               Mode_JumpGame=3
000F31r 1               Mode_CutSceneLoad=4
000F31r 1               Mode_CutSceneLoop=5
000F31r 1               Mode_NewGame=6
000F31r 1               Mode_SelectSongResult=7
000F31r 1               Mode_SongPass=8
000F31r 1               Mode_SongFail=9
000F31r 1               
000F31r 1               vBlankSubHandlersTable:
000F31r 1  rr rr        .word StandardVBlank-1
000F33r 1  rr rr        .word JumpGameVBlanker-1
000F35r 1  rr rr        .word CutsceneVBlank-1
000F37r 1               
000F37r 1               .include "romdata/cutscenes.s"
000F37r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;
000F37r 2               ; Cutscenes Data
000F37r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;
000F37r 2               
000F37r 2               
000F37r 2               ;Cutscenes Defines:
000F37r 2               cutscene_destroyed_city=0
000F37r 2               cutscene_mothership=1
000F37r 2               cutscene_destroyed_city_2=2
000F37r 2               cutscene_temple_ruins=3
000F37r 2               cutscene_utaco_temple=4
000F37r 2               ;Commands:
000F37r 2               ;$00 ~ 7F show corrspoding cutscene
000F37r 2               ;$FF - end cutscenes
000F37r 2               cutscenes_commands:
000F37r 2  00           	.byte $0
000F38r 2  00           	.byte $0
000F39r 2  00           	.byte $0
000F3Ar 2  00           	.byte $0
000F3Br 2  00           	.byte $0
000F3Cr 2  FF           	.byte $FF
000F3Dr 2               ;Nametables references:
000F3Dr 2               cutscenes_nametables_lo:
000F3Dr 2  rr           	.byte <CS_NAM_destroyed_city
000F3Er 2  rr           	.byte <CS_NAM_mothership
000F3Fr 2  rr           	.byte <CS_NAM_destroyed_city
000F40r 2  rr           	.byte <CS_NAM_temple_ruins
000F41r 2  rr           	.byte <CS_NAM_utaco_temple
000F42r 2  00           	.byte <0
000F43r 2               cutscenes_nametables_hi:
000F43r 2  rr           	.byte >CS_NAM_destroyed_city
000F44r 2  rr           	.byte >CS_NAM_mothership
000F45r 2  rr           	.byte >CS_NAM_destroyed_city
000F46r 2  rr           	.byte >CS_NAM_temple_ruins
000F47r 2  rr           	.byte >CS_NAM_utaco_temple
000F48r 2  00           	.byte >0
000F49r 2               ;Banks:
000F49r 2               cutscenes_banks_0:
000F49r 2  08           	.byte $8
000F4Ar 2  0C           	.byte $C
000F4Br 2  08           	.byte $8
000F4Cr 2  0D           	.byte $D
000F4Dr 2  0E           	.byte $E
000F4Er 2  00           	.byte $0
000F4Fr 2               cutscenes_banks_1:
000F4Fr 2  09           	.byte $9
000F50r 2  09           	.byte $9
000F51r 2  09           	.byte $9
000F52r 2  09           	.byte $9
000F53r 2  0F           	.byte $F
000F54r 2  00           	.byte $0
000F55r 2               ;Palettes:
000F55r 2               cutscenes_pal_destroyed_city:
000F55r 2  0F 00 10 3C  	.byte $0f,$00,$10,$3c,$0f,$07,$06,$05,$0f,$07,$17,$27,$0f,$06,$0a,$30
000F59r 2  0F 07 06 05  
000F5Dr 2  0F 07 17 27  
000F65r 2  0F 00 10 3C  	.byte $0f,$00,$10,$3c,$0f,$07,$06,$05,$0f,$07,$17,$27,$0f,$06,$0a,$30
000F69r 2  0F 07 06 05  
000F6Dr 2  0F 07 17 27  
000F75r 2               cutscenes_pal_mothership:
000F75r 2  0F 03 13 23  	.byte $0f,$03,$13,$23,$0f,$2d,$10,$32,$0f,$0c,$21,$30,$0f,$00,$0c,$23
000F79r 2  0F 2D 10 32  
000F7Dr 2  0F 0C 21 30  
000F85r 2  0F 03 13 23  	.byte $0f,$03,$13,$23,$0f,$2d,$10,$32,$0f,$0c,$21,$30,$0f,$10,$23,$1c
000F89r 2  0F 2D 10 32  
000F8Dr 2  0F 0C 21 30  
000F95r 2               cutscenes_pal_destroyed_city_2:
000F95r 2  0F 00 10 3C  	.byte $0f,$00,$10,$3c,$0f,$07,$06,$05,$0f,$07,$17,$27,$0f,$06,$0a,$30
000F99r 2  0F 07 06 05  
000F9Dr 2  0F 07 17 27  
000FA5r 2  0F 00 10 3C  	.byte $0f,$00,$10,$3c,$0f,$07,$06,$05,$0f,$07,$17,$27,$0f,$06,$0a,$30
000FA9r 2  0F 07 06 05  
000FADr 2  0F 07 17 27  
000FB5r 2               cutscenes_pal_temple_ruins:
000FB5r 2  0F 06 16 26  	.byte $0f,$06,$16,$26,$0f,$06,$16,$2d,$0f,$0c,$21,$30,$0f,$3d,$16,$2d
000FB9r 2  0F 06 16 2D  
000FBDr 2  0F 0C 21 30  
000FC5r 2  0F 06 16 26  	.byte $0f,$06,$16,$26,$0f,$06,$16,$2d,$0f,$0c,$21,$30,$0f,$3d,$16,$2d
000FC9r 2  0F 06 16 2D  
000FCDr 2  0F 0C 21 30  
000FD5r 2               cutscenes_pal_utaco_temple:
000FD5r 2  0F 16 2C 36  	.byte $0f,$16,$2c,$36,$0f,$25,$2c,$36,$0f,$16,$25,$05,$0f,$16,$06,$30
000FD9r 2  0F 25 2C 36  
000FDDr 2  0F 16 25 05  
000FE5r 2  0F 16 2C 36  	.byte $0f,$16,$2c,$36,$0f,$25,$2c,$36,$0f,$16,$25,$05,$0f,$16,$06,$30
000FE9r 2  0F 25 2C 36  
000FEDr 2  0F 16 25 05  
000FF5r 2               ;Palette Tables:
000FF5r 2               cutscenes_palettes_lo:
000FF5r 2  rr           	.byte <cutscenes_pal_destroyed_city
000FF6r 2  rr           	.byte <cutscenes_pal_mothership
000FF7r 2  rr           	.byte <cutscenes_pal_destroyed_city_2
000FF8r 2  rr           	.byte <cutscenes_pal_temple_ruins
000FF9r 2  rr           	.byte <cutscenes_pal_utaco_temple
000FFAr 2  00           	.byte 0
000FFBr 2               cutscenes_palettes_hi:
000FFBr 2  rr           	.byte >cutscenes_pal_destroyed_city
000FFCr 2  rr           	.byte >cutscenes_pal_mothership
000FFDr 2  rr           	.byte >cutscenes_pal_destroyed_city_2
000FFEr 2  rr           	.byte >cutscenes_pal_temple_ruins
000FFFr 2  rr           	.byte >cutscenes_pal_utaco_temple
001000r 2  00           	.byte 0
001001r 2               ;Strings: ($FF-ended strings)
001001r 2               cutscenes_string_destroyed_city_0_en:
001001r 2  B9 C0 9E 9B  	 .byte ($39+FontOffset),($40+FontOffset),($1E+FontOffset),($1B+FontOffset),($33+FontOffset),($2D+FontOffset),($40+FontOffset),($22+FontOffset),($1B+FontOffset),($30+FontOffset),($1F+FontOffset),($40+FontOffset),($1F+FontOffset),($26+FontOffset),($1B+Font
001005r 2  B3 AD C0 A2  
001009r 2  9B B0 9F C0  
001032r 2               Offset),($2A+FontOffset),($2D+FontOffset),($1F+FontOffset),($1E+FontOffset),($40+FontOffset),<($FE+FontOffset),($2D+FontOffset),($23+FontOffset),($28+FontOffset),($1D+FontOffset),($1F+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+Fon
001032r 2               tOffset),($40+FontOffset),($1B+FontOffset),($2E+FontOffset),($2E+FontOffset),($1B+FontOffset),($1D+FontOffset),($25+FontOffset),($40+FontOffset),<($FE+FontOffset),($2D+FontOffset),($2E+FontOffset),($1B+FontOffset),($2C+FontOffset),($2E+FontOffset),($1F+Fo
001032r 2               ntOffset),($1E+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
001032r 2               cutscenes_string_destroyed_city_0_es:
001032r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
001036r 2  80 8D 92 8B  
00103Ar 2  80 93 84 83  
001040r 2               cutscenes_string_destroyed_city_0_ja:
001040r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
001044r 2  80 8D 92 8B  
001048r 2  80 93 84 83  
00104Er 2               cutscenes_string_destroyed_city_1_en:
00104Er 2  8D A9 9C A9  	 .byte ($D+FontOffset),($29+FontOffset),($1C+FontOffset),($29+FontOffset),($1E+FontOffset),($33+FontOffset),($40+FontOffset),($23+FontOffset),($28+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($40+FontOffset),($31+FontO
001052r 2  9E B3 C0 A3  
001056r 2  A8 C0 AE A2  
001086r 2               ffset),($29+FontOffset),($2C+FontOffset),($26+FontOffset),($1E+FontOffset),($40+FontOffset),<($FE+FontOffset),($31+FontOffset),($1B+FontOffset),($2D+FontOffset),($40+FontOffset),($1F+FontOffset),($32+FontOffset),($2A+FontOffset),($1F+FontOffset),($1D+Font
001086r 2               Offset),($2E+FontOffset),($23+FontOffset),($28+FontOffset),($21+FontOffset),($40+FontOffset),<($FE+FontOffset),($2D+FontOffset),($29+FontOffset),($27+FontOffset),($1F+FontOffset),($2E+FontOffset),($22+FontOffset),($23+FontOffset),($28+FontOffset),($21+Fon
001086r 2               tOffset),($40+FontOffset),($26+FontOffset),($23+FontOffset),($25+FontOffset),($1F+FontOffset),($40+FontOffset),($23+FontOffset),($2E+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
001086r 2               cutscenes_string_destroyed_city_1_es:
001086r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00108Ar 2  80 8D 92 8B  
00108Er 2  80 93 84 83  
001094r 2               cutscenes_string_destroyed_city_1_ja:
001094r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
001098r 2  80 8D 92 8B  
00109Cr 2  80 93 84 83  
0010A2r 2               cutscenes_string_destroyed_city_2_en:
0010A2r 2  92 A9 C0 AE  	 .byte ($12+FontOffset),($29+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($2C+FontOffset),($1F+FontOffset),($40+FontOffset),($31+FontOffset),($1B+FontOffset),($2D+FontOffset),($40+FontOffset),($28+FontOffset),($29+Font
0010A6r 2  A2 9F AC 9F  
0010AAr 2  C0 B1 9B AD  
0010DAr 2               Offset),($2E+FontOffset),($22+FontOffset),($23+FontOffset),($28+FontOffset),($21+FontOffset),<($FE+FontOffset),($2E+FontOffset),($22+FontOffset),($1B+FontOffset),($2E+FontOffset),($40+FontOffset),($1D+FontOffset),($29+FontOffset),($2F+FontOffset),($26+Fon
0010DAr 2               tOffset),($1E+FontOffset),($40+FontOffset),($1C+FontOffset),($1F+FontOffset),($40+FontOffset),($1E+FontOffset),($29+FontOffset),($28+FontOffset),($1F+FontOffset),($40+FontOffset),<($FE+FontOffset),($2E+FontOffset),($29+FontOffset),($40+FontOffset),($2D+Fo
0010DAr 2               ntOffset),($2E+FontOffset),($29+FontOffset),($2A+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($27+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
0010DAr 2               cutscenes_string_destroyed_city_2_es:
0010DAr 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0010DEr 2  80 8D 92 8B  
0010E2r 2  80 93 84 83  
0010E8r 2               cutscenes_string_destroyed_city_2_ja:
0010E8r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0010ECr 2  80 8D 92 8B  
0010F0r 2  80 93 84 83  
0010F6r 2               cutscenes_string_mothership_0_en:
0010F6r 2  93 A2 9F C0  	 .byte ($13+FontOffset),($22+FontOffset),($1F+FontOffset),($40+FontOffset),($31+FontOffset),($1B+FontOffset),($25+FontOffset),($23+FontOffset),($28+FontOffset),($21+FontOffset),($40+FontOffset),($31+FontOffset),($29+FontOffset),($2C+FontOffset),($26+Font
0010FAr 2  B1 9B A5 A3  
0010FEr 2  A8 A1 C0 B1  
001152r 2               Offset),($1E+FontOffset),($40+FontOffset),($31+FontOffset),($1B+FontOffset),($2D+FontOffset),<($FE+FontOffset),($23+FontOffset),($28+FontOffset),($40+FontOffset),($2D+FontOffset),($22+FontOffset),($29+FontOffset),($1D+FontOffset),($25+FontOffset),($40+Fon
001152r 2               tOffset),($31+FontOffset),($22+FontOffset),($1F+FontOffset),($28+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($40+FontOffset),<($FE+FontOffset),($23+FontOffset),($27+FontOffset),($2A+FontOffset),($1F+FontOffset),($2C+Fo
001152r 2               ntOffset),($23+FontOffset),($29+FontOffset),($2F+FontOffset),($2D+FontOffset),($40+FontOffset),($27+FontOffset),($29+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($2C+FontOffset),($2D+FontOffset),($22+FontOffset),($23+FontOffset),($2A+Fo
001152r 2               ntOffset),<($FE+FontOffset),($1B+FontOffset),($2A+FontOffset),($2A+FontOffset),($1F+FontOffset),($1B+FontOffset),($2C+FontOffset),($1F+FontOffset),($1E+FontOffset),($40+FontOffset),($20+FontOffset),($26+FontOffset),($29+FontOffset),($1B+FontOffset),($2E+F
001152r 2               ontOffset),($23+FontOffset),($28+FontOffset),($21+FontOffset),($40+FontOffset),($23+FontOffset),($28+FontOffset),<($FE+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($40+FontOffset),($2D+FontOffset),($25+FontOffset),($33+FontOffset),($73+
001152r 2               FontOffset),($40+FontOffset),<($FF+FontOffset)
001152r 2               cutscenes_string_mothership_0_es:
001152r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
001156r 2  80 8D 92 8B  
00115Ar 2  80 93 84 83  
001160r 2               cutscenes_string_mothership_0_ja:
001160r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
001164r 2  80 8D 92 8B  
001168r 2  80 93 84 83  
00116Er 2               cutscenes_string_mothership_1_en:
00116Er 2  80 A8 9E C0  	 .byte ($0+FontOffset),($28+FontOffset),($1E+FontOffset),($40+FontOffset),($2D+FontOffset),($29+FontOffset),($29+FontOffset),($28+FontOffset),($40+FontOffset),($1B+FontOffset),($20+FontOffset),($2E+FontOffset),($1F+FontOffset),($2C+FontOffset),($75+FontO
001172r 2  AD A9 A9 A8  
001176r 2  C0 9B A0 AE  
0011D3r 2               ffset),($40+FontOffset),<($FE+FontOffset),($1C+FontOffset),($1B+FontOffset),($26+FontOffset),($26+FontOffset),($2D+FontOffset),($40+FontOffset),($29+FontOffset),($20+FontOffset),($40+FontOffset),($20+FontOffset),($23+FontOffset),($2C+FontOffset),($1F+Font
0011D3r 2               Offset),($40+FontOffset),<($FE+FontOffset),($1F+FontOffset),($27+FontOffset),($1F+FontOffset),($2C+FontOffset),($21+FontOffset),($1F+FontOffset),($1E+FontOffset),($40+FontOffset),($20+FontOffset),($2C+FontOffset),($29+FontOffset),($27+FontOffset),($40+Fon
0011D3r 2               tOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($40+FontOffset),<($FE+FontOffset),($2D+FontOffset),($22+FontOffset),($23+FontOffset),($2A+FontOffset),($40+FontOffset),($1B+FontOffset),($28+FontOffset),($1E+FontOffset),($40+FontOffset),($1C+Fo
0011D3r 2               ntOffset),($1F+FontOffset),($21+FontOffset),($1B+FontOffset),($28+FontOffset),($40+FontOffset),($2E+FontOffset),($29+FontOffset),($40+FontOffset),<($FE+FontOffset),($31+FontOffset),($2C+FontOffset),($1F+FontOffset),($1B+FontOffset),($25+FontOffset),($40+F
0011D3r 2               ontOffset),($1D+FontOffset),($22+FontOffset),($1B+FontOffset),($29+FontOffset),($2D+FontOffset),($40+FontOffset),($1B+FontOffset),($1D+FontOffset),($2C+FontOffset),($29+FontOffset),($2D+FontOffset),($2D+FontOffset),($40+FontOffset),<($FE+FontOffset),($2E+
0011D3r 2               FontOffset),($22+FontOffset),($1F+FontOffset),($40+FontOffset),($21+FontOffset),($26+FontOffset),($29+FontOffset),($1C+FontOffset),($1F+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
0011D3r 2               cutscenes_string_mothership_1_es:
0011D3r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0011D7r 2  80 8D 92 8B  
0011DBr 2  80 93 84 83  
0011E1r 2               cutscenes_string_mothership_1_ja:
0011E1r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0011E5r 2  80 8D 92 8B  
0011E9r 2  80 93 84 83  
0011EFr 2               cutscenes_string_destroyed_city_2_0_en:
0011EFr 2  93 A2 9F C0  	 .byte ($13+FontOffset),($22+FontOffset),($1F+FontOffset),($40+FontOffset),($2A+FontOffset),($1F+FontOffset),($29+FontOffset),($2A+FontOffset),($26+FontOffset),($1F+FontOffset),($40+FontOffset),($1B+FontOffset),($2C+FontOffset),($29+FontOffset),($2F+Font
0011F3r 2  AA 9F A9 AA  
0011F7r 2  A6 9F C0 9B  
001248r 2               Offset),($28+FontOffset),($1E+FontOffset),($40+FontOffset),<($FE+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($40+FontOffset),($31+FontOffset),($29+FontOffset),($2C+FontOffset),($26+FontOffset),($1E+FontOffset),($40+FontOffset),($23+Fon
001248r 2               tOffset),($2D+FontOffset),($40+FontOffset),($26+FontOffset),($29+FontOffset),($2D+FontOffset),($23+FontOffset),($28+FontOffset),($21+FontOffset),($40+FontOffset),<($FE+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($23+FontOffset),($2C+Fo
001248r 2               ntOffset),($40+FontOffset),($22+FontOffset),($29+FontOffset),($27+FontOffset),($1F+FontOffset),($2D+FontOffset),($75+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($23+FontOffset),($2C+FontOffset),($40+FontOffset),<($FE+F
001248r 2               ontOffset),($20+FontOffset),($1B+FontOffset),($27+FontOffset),($23+FontOffset),($26+FontOffset),($23+FontOffset),($1F+FontOffset),($2D+FontOffset),($75+FontOffset),($40+FontOffset),($1B+FontOffset),($28+FontOffset),($1E+FontOffset),($40+FontOffset),($2E+F
001248r 2               ontOffset),($22+FontOffset),($1F+FontOffset),($23+FontOffset),($2C+FontOffset),($40+FontOffset),<($FE+FontOffset),($22+FontOffset),($29+FontOffset),($2A+FontOffset),($1F+FontOffset),($2D+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
001248r 2               cutscenes_string_destroyed_city_2_0_es:
001248r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00124Cr 2  80 8D 92 8B  
001250r 2  80 93 84 83  
001256r 2               cutscenes_string_destroyed_city_2_0_ja:
001256r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00125Ar 2  80 8D 92 8B  
00125Er 2  80 93 84 83  
001264r 2               cutscenes_string_destroyed_city_2_1_en:
001264r 2  80 A8 9E C0  	 .byte ($0+FontOffset),($28+FontOffset),($1E+FontOffset),($40+FontOffset),($1B+FontOffset),($2D+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($2C+FontOffset),($1F+FontOffset),($40+FontOffset),($1B+FontOffset),($2C+FontO
001268r 2  9B AD C0 AE  
00126Cr 2  A2 9F AC 9F  
0012F9r 2               ffset),($1F+FontOffset),($40+FontOffset),($28+FontOffset),($29+FontOffset),($40+FontOffset),<($FE+FontOffset),($23+FontOffset),($28+FontOffset),($1E+FontOffset),($23+FontOffset),($1D+FontOffset),($1B+FontOffset),($2E+FontOffset),($23+FontOffset),($29+Font
0012F9r 2               Offset),($28+FontOffset),($2D+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($1B+FontOffset),($2E+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),<($FE+FontOffset),($1D+FontOffset),($29+FontOffset),($28+Fon
0012F9r 2               tOffset),($2E+FontOffset),($23+FontOffset),($28+FontOffset),($2F+FontOffset),($29+FontOffset),($2F+FontOffset),($2D+FontOffset),($40+FontOffset),($1C+FontOffset),($1B+FontOffset),($2C+FontOffset),($2C+FontOffset),($1B+FontOffset),($21+FontOffset),($1F+Fon
0012F9r 2               tOffset),($40+FontOffset),<($FE+FontOffset),($31+FontOffset),($23+FontOffset),($26+FontOffset),($26+FontOffset),($40+FontOffset),($1F+FontOffset),($30+FontOffset),($1F+FontOffset),($2C+FontOffset),($40+FontOffset),($2D+FontOffset),($2E+FontOffset),($29+Fo
0012F9r 2               ntOffset),($2A+FontOffset),($75+FontOffset),($40+FontOffset),($23+FontOffset),($2E+FontOffset),($40+FontOffset),<($FE+FontOffset),($23+FontOffset),($2D+FontOffset),($40+FontOffset),($29+FontOffset),($28+FontOffset),($26+FontOffset),($33+FontOffset),($40+F
0012F9r 2               ontOffset),($1B+FontOffset),($40+FontOffset),($27+FontOffset),($1B+FontOffset),($2E+FontOffset),($2E+FontOffset),($1F+FontOffset),($2C+FontOffset),($40+FontOffset),($29+FontOffset),($20+FontOffset),($40+FontOffset),<($FE+FontOffset),($2E+FontOffset),($23+
0012F9r 2               FontOffset),($27+FontOffset),($1F+FontOffset),($40+FontOffset),($1C+FontOffset),($1F+FontOffset),($20+FontOffset),($29+FontOffset),($2C+FontOffset),($1F+FontOffset),($40+FontOffset),<($FE+FontOffset),($1F+FontOffset),($30+FontOffset),($1F+FontOffset),($2C
0012F9r 2               +FontOffset),($33+FontOffset),($2E+FontOffset),($22+FontOffset),($23+FontOffset),($28+FontOffset),($21+FontOffset),($40+FontOffset),($23+FontOffset),($2D+FontOffset),($40+FontOffset),<($FE+FontOffset),($2C+FontOffset),($1F+FontOffset),($1E+FontOffset),($2
0012F9r 2               F+FontOffset),($1D+FontOffset),($1F+FontOffset),($1E+FontOffset),($40+FontOffset),($2E+FontOffset),($29+FontOffset),($40+FontOffset),($1E+FontOffset),($2F+FontOffset),($2D+FontOffset),($2E+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
0012F9r 2               cutscenes_string_destroyed_city_2_1_es:
0012F9r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0012FDr 2  80 8D 92 8B  
001301r 2  80 93 84 83  
001307r 2               cutscenes_string_destroyed_city_2_1_ja:
001307r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00130Br 2  80 8D 92 8B  
00130Fr 2  80 93 84 83  
001315r 2               cutscenes_string_temple_ruins_0_en:
001315r 2  C0 C0 FA C0  	 .byte ($40+FontOffset),($40+FontOffset),($7A+FontOffset),($40+FontOffset),($13+FontOffset),($1F+FontOffset),($27+FontOffset),($2A+FontOffset),($26+FontOffset),($1F+FontOffset),($40+FontOffset),($11+FontOffset),($2F+FontOffset),($23+FontOffset),($28+Font
001319r 2  93 9F A7 AA  
00131Dr 2  A6 9F C0 91  
001329r 2               Offset),($2D+FontOffset),($40+FontOffset),($7A+FontOffset),($40+FontOffset),<($FF+FontOffset)
001329r 2               cutscenes_string_temple_ruins_0_es:
001329r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00132Dr 2  80 8D 92 8B  
001331r 2  80 93 84 83  
001337r 2               cutscenes_string_temple_ruins_0_ja:
001337r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00133Br 2  80 8D 92 8B  
00133Fr 2  80 93 84 83  
001345r 2               cutscenes_string_utaco_temple_0_en:
001345r 2  F2 F2 F2 FC  	 .byte ($72+FontOffset),($72+FontOffset),($72+FontOffset),($7C+FontOffset),($40+FontOffset),($14+FontOffset),($2E+FontOffset),($1B+FontOffset),($1D+FontOffset),($29+FontOffset),($75+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+Font
001349r 2  C0 94 AE 9B  
00134Dr 2  9D A9 F5 C0  
00136Br 2               Offset),($40+FontOffset),($2E+FontOffset),($23+FontOffset),($27+FontOffset),($1F+FontOffset),<($FE+FontOffset),($23+FontOffset),($2D+FontOffset),($40+FontOffset),($2C+FontOffset),($2F+FontOffset),($28+FontOffset),($28+FontOffset),($23+FontOffset),($28+Fon
00136Br 2               tOffset),($21+FontOffset),($40+FontOffset),($29+FontOffset),($2F+FontOffset),($2E+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
00136Br 2               cutscenes_string_utaco_temple_0_es:
00136Br 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00136Fr 2  80 8D 92 8B  
001373r 2  80 93 84 83  
001379r 2               cutscenes_string_utaco_temple_0_ja:
001379r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00137Dr 2  80 8D 92 8B  
001381r 2  80 93 84 83  
001387r 2               cutscenes_string_utaco_temple_1_en:
001387r 2  F2 F2 F2 FC  	 .byte ($72+FontOffset),($72+FontOffset),($72+FontOffset),($7C+FontOffset),($40+FontOffset),($16+FontOffset),($1F+FontOffset),($40+FontOffset),($28+FontOffset),($1F+FontOffset),($1F+FontOffset),($1E+FontOffset),($40+FontOffset),($33+FontOffset),($29+Font
00138Br 2  C0 96 9F C0  
00138Fr 2  A8 9F 9F 9E  
0013B8r 2               Offset),($2F+FontOffset),($2C+FontOffset),($40+FontOffset),<($FE+FontOffset),($2D+FontOffset),($29+FontOffset),($28+FontOffset),($21+FontOffset),($40+FontOffset),($2E+FontOffset),($29+FontOffset),($40+FontOffset),($1B+FontOffset),($1D+FontOffset),($2E+Fon
0013B8r 2               tOffset),($23+FontOffset),($30+FontOffset),($1B+FontOffset),($2E+FontOffset),($1F+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),<($FE+FontOffset),($2A+FontOffset),($33+FontOffset),($26+FontOffset),($29+FontOffset),($28+Fo
0013B8r 2               ntOffset),($2D+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
0013B8r 2               cutscenes_string_utaco_temple_1_es:
0013B8r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0013BCr 2  80 8D 92 8B  
0013C0r 2  80 93 84 83  
0013C6r 2               cutscenes_string_utaco_temple_1_ja:
0013C6r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0013CAr 2  80 8D 92 8B  
0013CEr 2  80 93 84 83  
0013D4r 2               cutscenes_string_utaco_temple_2_en:
0013D4r 2  94 AE 9B 9D  	 .byte ($14+FontOffset),($2E+FontOffset),($1B+FontOffset),($1D+FontOffset),($29+FontOffset),($7C+FontOffset),($40+FontOffset),($8+FontOffset),($40+FontOffset),($1E+FontOffset),($29+FontOffset),($28+FontOffset),($74+FontOffset),($2E+FontOffset),($40+FontO
0013D8r 2  A9 FC C0 88  
0013DCr 2  C0 9E A9 A8  
0013FAr 2               ffset),($25+FontOffset),($28+FontOffset),($29+FontOffset),($31+FontOffset),($40+FontOffset),<($FE+FontOffset),($23+FontOffset),($20+FontOffset),($40+FontOffset),($8+FontOffset),($40+FontOffset),($1D+FontOffset),($1B+FontOffset),($28+FontOffset),($40+FontO
0013FAr 2               ffset),($1E+FontOffset),($29+FontOffset),($40+FontOffset),($23+FontOffset),($2E+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
0013FAr 2               cutscenes_string_utaco_temple_2_es:
0013FAr 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0013FEr 2  80 8D 92 8B  
001402r 2  80 93 84 83  
001408r 2               cutscenes_string_utaco_temple_2_ja:
001408r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00140Cr 2  80 8D 92 8B  
001410r 2  80 93 84 83  
001416r 2               cutscenes_string_utaco_temple_3_en:
001416r 2  F2 F2 F2 FC  	 .byte ($72+FontOffset),($72+FontOffset),($72+FontOffset),($7C+FontOffset),($40+FontOffset),($18+FontOffset),($29+FontOffset),($2F+FontOffset),($40+FontOffset),($2E+FontOffset),($2C+FontOffset),($1B+FontOffset),($23+FontOffset),($28+FontOffset),($1F+Font
00141Ar 2  C0 98 A9 AF  
00141Er 2  C0 AE AC 9B  
001459r 2               Offset),($1E+FontOffset),($40+FontOffset),<($FE+FontOffset),($27+FontOffset),($29+FontOffset),($2D+FontOffset),($2E+FontOffset),($40+FontOffset),($29+FontOffset),($20+FontOffset),($40+FontOffset),($33+FontOffset),($29+FontOffset),($2F+FontOffset),($2C+Fon
001459r 2               tOffset),($40+FontOffset),($26+FontOffset),($23+FontOffset),($20+FontOffset),($1F+FontOffset),($40+FontOffset),<($FE+FontOffset),($20+FontOffset),($29+FontOffset),($2C+FontOffset),($40+FontOffset),($2E+FontOffset),($22+FontOffset),($23+FontOffset),($2D+Fo
001459r 2               ntOffset),($75+FontOffset),($40+FontOffset),($33+FontOffset),($29+FontOffset),($2F+FontOffset),($40+FontOffset),($31+FontOffset),($23+FontOffset),($26+FontOffset),($26+FontOffset),($40+FontOffset),<($FE+FontOffset),($1C+FontOffset),($1F+FontOffset),($40+F
001459r 2               ontOffset),($20+FontOffset),($23+FontOffset),($28+FontOffset),($1F+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
001459r 2               cutscenes_string_utaco_temple_3_es:
001459r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00145Dr 2  80 8D 92 8B  
001461r 2  80 93 84 83  
001467r 2               cutscenes_string_utaco_temple_3_ja:
001467r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00146Br 2  80 8D 92 8B  
00146Fr 2  80 93 84 83  
001475r 2               cutscenes_string_utaco_temple_4_en:
001475r 2  F2 F2 F2 FC  	 .byte ($72+FontOffset),($72+FontOffset),($72+FontOffset),($7C+FontOffset),($40+FontOffset),($D+FontOffset),($29+FontOffset),($31+FontOffset),($71+FontOffset),($40+FontOffset),($0+FontOffset),($1D+FontOffset),($2E+FontOffset),($23+FontOffset),($30+FontOf
001479r 2  C0 8D A9 B1  
00147Dr 2  F1 C0 80 9D  
00149Er 2               fset),($1B+FontOffset),($2E+FontOffset),($1F+FontOffset),($40+FontOffset),<($FE+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($40+FontOffset),($C+FontOffset),($2F+FontOffset),($2D+FontOffset),($23+FontOffset),($1D+FontOffset),($1B+FontOf
00149Er 2               fset),($26+FontOffset),($40+FontOffset),($2+FontOffset),($22+FontOffset),($1B+FontOffset),($28+FontOffset),($21+FontOffset),($1F+FontOffset),($2C+FontOffset),($71+FontOffset),<($FF+FontOffset)
00149Er 2               cutscenes_string_utaco_temple_4_es:
00149Er 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0014A2r 2  80 8D 92 8B  
0014A6r 2  80 93 84 83  
0014ACr 2               cutscenes_string_utaco_temple_4_ja:
0014ACr 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0014B0r 2  80 8D 92 8B  
0014B4r 2  80 93 84 83  
0014BAr 2               cutscenes_string_utaco_temple_5_en:
0014BAr 2  94 AE 9B 9D  	 .byte ($14+FontOffset),($2E+FontOffset),($1B+FontOffset),($1D+FontOffset),($29+FontOffset),($7C+FontOffset),($40+FontOffset),($8+FontOffset),($40+FontOffset),($28+FontOffset),($1F+FontOffset),($30+FontOffset),($1F+FontOffset),($2C+FontOffset),($40+FontO
0014BEr 2  A9 FC C0 88  
0014C2r 2  C0 A8 9F B0  
0014E3r 2               ffset),<($FE+FontOffset),($1B+FontOffset),($1D+FontOffset),($2E+FontOffset),($23+FontOffset),($30+FontOffset),($1B+FontOffset),($2E+FontOffset),($1F+FontOffset),($1E+FontOffset),($40+FontOffset),($23+FontOffset),($2E+FontOffset),($40+FontOffset),<($FE+Fon
0014E3r 2               tOffset),($1C+FontOffset),($1F+FontOffset),($20+FontOffset),($29+FontOffset),($2C+FontOffset),($1F+FontOffset),($73+FontOffset),($73+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
0014E3r 2               cutscenes_string_utaco_temple_5_es:
0014E3r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0014E7r 2  80 8D 92 8B  
0014EBr 2  80 93 84 83  
0014F1r 2               cutscenes_string_utaco_temple_5_ja:
0014F1r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0014F5r 2  80 8D 92 8B  
0014F9r 2  80 93 84 83  
0014FFr 2               cutscenes_string_utaco_temple_6_en:
0014FFr 2  94 AE 9B 9D  	 .byte ($14+FontOffset),($2E+FontOffset),($1B+FontOffset),($1D+FontOffset),($29+FontOffset),($7C+FontOffset),($40+FontOffset),($4+FontOffset),($30+FontOffset),($1F+FontOffset),($2C+FontOffset),($33+FontOffset),($1C+FontOffset),($29+FontOffset),($1E+FontO
001503r 2  A9 FC C0 84  
001507r 2  B0 9F AC B3  
00153Er 2               ffset),($33+FontOffset),($40+FontOffset),($23+FontOffset),($2D+FontOffset),($40+FontOffset),<($FE+FontOffset),($1E+FontOffset),($1F+FontOffset),($2A+FontOffset),($1F+FontOffset),($28+FontOffset),($1E+FontOffset),($23+FontOffset),($28+FontOffset),($21+Font
00153Er 2               Offset),($40+FontOffset),($29+FontOffset),($28+FontOffset),($40+FontOffset),($27+FontOffset),($1F+FontOffset),($75+FontOffset),($40+FontOffset),($1C+FontOffset),($2F+FontOffset),($2E+FontOffset),<($FE+FontOffset),($8+FontOffset),($74+FontOffset),($27+Font
00153Er 2               Offset),($40+FontOffset),($28+FontOffset),($29+FontOffset),($2E+FontOffset),($40+FontOffset),($21+FontOffset),($29+FontOffset),($29+FontOffset),($1E+FontOffset),($40+FontOffset),($1F+FontOffset),($28+FontOffset),($29+FontOffset),($2F+FontOffset),($21+Font
00153Er 2               Offset),($22+FontOffset),($73+FontOffset),<($FF+FontOffset)
00153Er 2               cutscenes_string_utaco_temple_6_es:
00153Er 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
001542r 2  80 8D 92 8B  
001546r 2  80 93 84 83  
00154Cr 2               cutscenes_string_utaco_temple_6_ja:
00154Cr 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
001550r 2  80 8D 92 8B  
001554r 2  80 93 84 83  
00155Ar 2               cutscenes_string_utaco_temple_7_en:
00155Ar 2  94 AE 9B 9D  	 .byte ($14+FontOffset),($2E+FontOffset),($1B+FontOffset),($1D+FontOffset),($29+FontOffset),($7C+FontOffset),($40+FontOffset),($16+FontOffset),($22+FontOffset),($1B+FontOffset),($2E+FontOffset),($40+FontOffset),($23+FontOffset),($20+FontOffset),($40+Font
00155Er 2  A9 FC C0 96  
001562r 2  A2 9B AE C0  
001581r 2               Offset),($8+FontOffset),($40+FontOffset),<($FE+FontOffset),($1D+FontOffset),($1B+FontOffset),($28+FontOffset),($74+FontOffset),($2E+FontOffset),($40+FontOffset),($27+FontOffset),($1B+FontOffset),($25+FontOffset),($1F+FontOffset),($40+FontOffset),($23+Font
001581r 2               Offset),($2E+FontOffset),($40+FontOffset),($31+FontOffset),($29+FontOffset),($2C+FontOffset),($25+FontOffset),($72+FontOffset),($40+FontOffset),<($FF+FontOffset)
001581r 2               cutscenes_string_utaco_temple_7_es:
001581r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
001585r 2  80 8D 92 8B  
001589r 2  80 93 84 83  
00158Fr 2               cutscenes_string_utaco_temple_7_ja:
00158Fr 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
001593r 2  80 8D 92 8B  
001597r 2  80 93 84 83  
00159Dr 2               cutscenes_string_utaco_temple_8_en:
00159Dr 2  F2 F2 F2 FC  	 .byte ($72+FontOffset),($72+FontOffset),($72+FontOffset),($7C+FontOffset),($40+FontOffset),($16+FontOffset),($1F+FontOffset),($40+FontOffset),($1E+FontOffset),($29+FontOffset),($28+FontOffset),($74+FontOffset),($2E+FontOffset),($40+FontOffset),($22+Font
0015A1r 2  C0 96 9F C0  
0015A5r 2  9E A9 A8 F4  
0015C2r 2               Offset),($1B+FontOffset),($30+FontOffset),($1F+FontOffset),($40+FontOffset),<($FE+FontOffset),($1B+FontOffset),($28+FontOffset),($29+FontOffset),($2E+FontOffset),($22+FontOffset),($1F+FontOffset),($2C+FontOffset),($40+FontOffset),($1D+FontOffset),($22+Fon
0015C2r 2               tOffset),($29+FontOffset),($23+FontOffset),($1D+FontOffset),($1F+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+FontOffset)
0015C2r 2               cutscenes_string_utaco_temple_8_es:
0015C2r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0015C6r 2  80 8D 92 8B  
0015CAr 2  80 93 84 83  
0015D0r 2               cutscenes_string_utaco_temple_8_ja:
0015D0r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0015D4r 2  80 8D 92 8B  
0015D8r 2  80 93 84 83  
0015DEr 2               cutscenes_string_utaco_temple_9_en:
0015DEr 2  F2 F2 F2 FC  	 .byte ($72+FontOffset),($72+FontOffset),($72+FontOffset),($7C+FontOffset),($40+FontOffset),($0+FontOffset),($28+FontOffset),($1E+FontOffset),($40+FontOffset),($31+FontOffset),($1F+FontOffset),($40+FontOffset),($31+FontOffset),($23+FontOffset),($26+FontO
0015E2r 2  C0 80 A8 9E  
0015E6r 2  C0 B1 9F C0  
00160Br 2               ffset),($26+FontOffset),($40+FontOffset),<($FE+FontOffset),($28+FontOffset),($1F+FontOffset),($30+FontOffset),($1F+FontOffset),($2C+FontOffset),($40+FontOffset),($25+FontOffset),($28+FontOffset),($29+FontOffset),($31+FontOffset),($40+FontOffset),($2F+Font
00160Br 2               Offset),($28+FontOffset),($2E+FontOffset),($23+FontOffset),($26+FontOffset),($40+FontOffset),($33+FontOffset),($29+FontOffset),($2F+FontOffset),<($FE+FontOffset),($2E+FontOffset),($2C+FontOffset),($33+FontOffset),($73+FontOffset),($40+FontOffset),<($FF+Fo
00160Br 2               ntOffset)
00160Br 2               cutscenes_string_utaco_temple_9_es:
00160Br 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00160Fr 2  80 8D 92 8B  
001613r 2  80 93 84 83  
001619r 2               cutscenes_string_utaco_temple_9_ja:
001619r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00161Dr 2  80 8D 92 8B  
001621r 2  80 93 84 83  
001627r 2               cutscenes_string_utaco_temple_10_en:
001627r 2  F2 F2 F2 FC  	 .byte ($72+FontOffset),($72+FontOffset),($72+FontOffset),($7C+FontOffset),($40+FontOffset),($12+FontOffset),($29+FontOffset),($75+FontOffset),($40+FontOffset),($26+FontOffset),($1F+FontOffset),($2E+FontOffset),($2D+FontOffset),($40+FontOffset),($21+Font
00162Br 2  C0 92 A9 F5  
00162Fr 2  C0 A6 9F AE  
00163Br 2               Offset),($29+FontOffset),($71+FontOffset),($40+FontOffset),($40+FontOffset),<($FF+FontOffset)
00163Br 2               cutscenes_string_utaco_temple_10_es:
00163Br 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00163Fr 2  80 8D 92 8B  
001643r 2  80 93 84 83  
001649r 2               cutscenes_string_utaco_temple_10_ja:
001649r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
00164Dr 2  80 8D 92 8B  
001651r 2  80 93 84 83  
001657r 2               cutscenes_string_utaco_temple_11_en:
001657r 2  F2 F2 F2 FC  	 .byte ($72+FontOffset),($72+FontOffset),($72+FontOffset),($7C+FontOffset),($40+FontOffset),($C+FontOffset),($2F+FontOffset),($2D+FontOffset),($23+FontOffset),($1D+FontOffset),($1B+FontOffset),($26+FontOffset),($40+FontOffset),($1+FontOffset),($1B+FontOf
00165Br 2  C0 8C AF AD  
00165Fr 2  A3 9D 9B A6  
001675r 2               fset),($2E+FontOffset),($2E+FontOffset),($26+FontOffset),($1F+FontOffset),($40+FontOffset),<($FE+FontOffset),($2+FontOffset),($22+FontOffset),($1B+FontOffset),($28+FontOffset),($21+FontOffset),($1F+FontOffset),($71+FontOffset),($40+FontOffset),<($FF+FontO
001675r 2               ffset)
001675r 2               cutscenes_string_utaco_temple_11_es:
001675r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
001679r 2  80 8D 92 8B  
00167Dr 2  80 93 84 83  
001683r 2               cutscenes_string_utaco_temple_11_ja:
001683r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
001687r 2  80 8D 92 8B  
00168Br 2  80 93 84 83  
001691r 2               cutscenes_string_utaco_temple_12_en:
001691r 2  FA C0 88 8D  	 .byte ($7A+FontOffset),($40+FontOffset),($8+FontOffset),($D+FontOffset),($12+FontOffset),($4+FontOffset),($11+FontOffset),($13+FontOffset),($40+FontOffset),($7+FontOffset),($4+FontOffset),($11+FontOffset),($4+FontOffset),($40+FontOffset),<($FE+FontOffse
001695r 2  92 84 91 93  
001699r 2  C0 87 84 91  
0016BBr 2               t),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($5+FontOffset),($E+FontOffset),($11+FontOffset),($C+FontOffset),($0+FontOffset),($13+FontOffset),($8+FontOffset),($E+FontOffset),($D+FontOffset),($40+FontOffset),($12+F
0016BBr 2               ontOffset),($2+FontOffset),($4+FontOffset),($D+FontOffset),($4+FontOffset),<($FE+FontOffset),($7C+FontOffset),($3+FontOffset),($40+FontOffset),($7A+FontOffset),($40+FontOffset),<($FF+FontOffset)
0016BBr 2               cutscenes_string_utaco_temple_12_es:
0016BBr 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0016BFr 2  80 8D 92 8B  
0016C3r 2  80 93 84 83  
0016C9r 2               cutscenes_string_utaco_temple_12_ja:
0016C9r 2  94 8D 93 91  	 .byte ($14+FontOffset),($D+FontOffset),($13+FontOffset),($11+FontOffset),($0+FontOffset),($D+FontOffset),($12+FontOffset),($B+FontOffset),($0+FontOffset),($13+FontOffset),($4+FontOffset),($3+FontOffset),($40+FontOffset),<($FF+FontOffset)
0016CDr 2  80 8D 92 8B  
0016D1r 2  80 93 84 83  
0016D7r 2               ;Strings lists:
0016D7r 2               cutscenes_strings_list_def_destroyed_city_en_lo:
0016D7r 2  rr           	.byte <cutscenes_string_destroyed_city_0_en
0016D8r 2  rr           	.byte <cutscenes_string_destroyed_city_1_en
0016D9r 2  rr           	.byte <cutscenes_string_destroyed_city_2_en
0016DAr 2  00           	.byte 0
0016DBr 2               cutscenes_strings_list_def_destroyed_city_en_hi:
0016DBr 2  rr           	.byte >cutscenes_string_destroyed_city_0_en
0016DCr 2  rr           	.byte >cutscenes_string_destroyed_city_1_en
0016DDr 2  rr           	.byte >cutscenes_string_destroyed_city_2_en
0016DEr 2  00           	.byte 0
0016DFr 2               cutscenes_strings_list_def_destroyed_city_es_lo:
0016DFr 2  rr           	.byte <cutscenes_string_destroyed_city_0_es
0016E0r 2  rr           	.byte <cutscenes_string_destroyed_city_1_es
0016E1r 2  rr           	.byte <cutscenes_string_destroyed_city_2_es
0016E2r 2  00           	.byte 0
0016E3r 2               cutscenes_strings_list_def_destroyed_city_es_hi:
0016E3r 2  rr           	.byte >cutscenes_string_destroyed_city_0_es
0016E4r 2  rr           	.byte >cutscenes_string_destroyed_city_1_es
0016E5r 2  rr           	.byte >cutscenes_string_destroyed_city_2_es
0016E6r 2  00           	.byte 0
0016E7r 2               cutscenes_strings_list_def_destroyed_city_ja_lo:
0016E7r 2  rr           	.byte <cutscenes_string_destroyed_city_0_ja
0016E8r 2  rr           	.byte <cutscenes_string_destroyed_city_1_ja
0016E9r 2  rr           	.byte <cutscenes_string_destroyed_city_2_ja
0016EAr 2  00           	.byte 0
0016EBr 2               cutscenes_strings_list_def_destroyed_city_ja_hi:
0016EBr 2  rr           	.byte >cutscenes_string_destroyed_city_0_ja
0016ECr 2  rr           	.byte >cutscenes_string_destroyed_city_1_ja
0016EDr 2  rr           	.byte >cutscenes_string_destroyed_city_2_ja
0016EEr 2  00           	.byte 0
0016EFr 2               cutscenes_strings_list_def_mothership_en_lo:
0016EFr 2  rr           	.byte <cutscenes_string_mothership_0_en
0016F0r 2  rr           	.byte <cutscenes_string_mothership_1_en
0016F1r 2  00           	.byte 0
0016F2r 2               cutscenes_strings_list_def_mothership_en_hi:
0016F2r 2  rr           	.byte >cutscenes_string_mothership_0_en
0016F3r 2  rr           	.byte >cutscenes_string_mothership_1_en
0016F4r 2  00           	.byte 0
0016F5r 2               cutscenes_strings_list_def_mothership_es_lo:
0016F5r 2  rr           	.byte <cutscenes_string_mothership_0_es
0016F6r 2  rr           	.byte <cutscenes_string_mothership_1_es
0016F7r 2  00           	.byte 0
0016F8r 2               cutscenes_strings_list_def_mothership_es_hi:
0016F8r 2  rr           	.byte >cutscenes_string_mothership_0_es
0016F9r 2  rr           	.byte >cutscenes_string_mothership_1_es
0016FAr 2  00           	.byte 0
0016FBr 2               cutscenes_strings_list_def_mothership_ja_lo:
0016FBr 2  rr           	.byte <cutscenes_string_mothership_0_ja
0016FCr 2  rr           	.byte <cutscenes_string_mothership_1_ja
0016FDr 2  00           	.byte 0
0016FEr 2               cutscenes_strings_list_def_mothership_ja_hi:
0016FEr 2  rr           	.byte >cutscenes_string_mothership_0_ja
0016FFr 2  rr           	.byte >cutscenes_string_mothership_1_ja
001700r 2  00           	.byte 0
001701r 2               cutscenes_strings_list_def_destroyed_city_2_en_lo:
001701r 2  rr           	.byte <cutscenes_string_destroyed_city_2_0_en
001702r 2  rr           	.byte <cutscenes_string_destroyed_city_2_1_en
001703r 2  00           	.byte 0
001704r 2               cutscenes_strings_list_def_destroyed_city_2_en_hi:
001704r 2  rr           	.byte >cutscenes_string_destroyed_city_2_0_en
001705r 2  rr           	.byte >cutscenes_string_destroyed_city_2_1_en
001706r 2  00           	.byte 0
001707r 2               cutscenes_strings_list_def_destroyed_city_2_es_lo:
001707r 2  rr           	.byte <cutscenes_string_destroyed_city_2_0_es
001708r 2  rr           	.byte <cutscenes_string_destroyed_city_2_1_es
001709r 2  00           	.byte 0
00170Ar 2               cutscenes_strings_list_def_destroyed_city_2_es_hi:
00170Ar 2  rr           	.byte >cutscenes_string_destroyed_city_2_0_es
00170Br 2  rr           	.byte >cutscenes_string_destroyed_city_2_1_es
00170Cr 2  00           	.byte 0
00170Dr 2               cutscenes_strings_list_def_destroyed_city_2_ja_lo:
00170Dr 2  rr           	.byte <cutscenes_string_destroyed_city_2_0_ja
00170Er 2  rr           	.byte <cutscenes_string_destroyed_city_2_1_ja
00170Fr 2  00           	.byte 0
001710r 2               cutscenes_strings_list_def_destroyed_city_2_ja_hi:
001710r 2  rr           	.byte >cutscenes_string_destroyed_city_2_0_ja
001711r 2  rr           	.byte >cutscenes_string_destroyed_city_2_1_ja
001712r 2  00           	.byte 0
001713r 2               cutscenes_strings_list_def_temple_ruins_en_lo:
001713r 2  rr           	.byte <cutscenes_string_temple_ruins_0_en
001714r 2  00           	.byte 0
001715r 2               cutscenes_strings_list_def_temple_ruins_en_hi:
001715r 2  rr           	.byte >cutscenes_string_temple_ruins_0_en
001716r 2  00           	.byte 0
001717r 2               cutscenes_strings_list_def_temple_ruins_es_lo:
001717r 2  rr           	.byte <cutscenes_string_temple_ruins_0_es
001718r 2  00           	.byte 0
001719r 2               cutscenes_strings_list_def_temple_ruins_es_hi:
001719r 2  rr           	.byte >cutscenes_string_temple_ruins_0_es
00171Ar 2  00           	.byte 0
00171Br 2               cutscenes_strings_list_def_temple_ruins_ja_lo:
00171Br 2  rr           	.byte <cutscenes_string_temple_ruins_0_ja
00171Cr 2  00           	.byte 0
00171Dr 2               cutscenes_strings_list_def_temple_ruins_ja_hi:
00171Dr 2  rr           	.byte >cutscenes_string_temple_ruins_0_ja
00171Er 2  00           	.byte 0
00171Fr 2               cutscenes_strings_list_def_utaco_temple_en_lo:
00171Fr 2  rr           	.byte <cutscenes_string_utaco_temple_0_en
001720r 2  rr           	.byte <cutscenes_string_utaco_temple_1_en
001721r 2  rr           	.byte <cutscenes_string_utaco_temple_2_en
001722r 2  rr           	.byte <cutscenes_string_utaco_temple_3_en
001723r 2  rr           	.byte <cutscenes_string_utaco_temple_4_en
001724r 2  rr           	.byte <cutscenes_string_utaco_temple_5_en
001725r 2  rr           	.byte <cutscenes_string_utaco_temple_6_en
001726r 2  rr           	.byte <cutscenes_string_utaco_temple_7_en
001727r 2  rr           	.byte <cutscenes_string_utaco_temple_8_en
001728r 2  rr           	.byte <cutscenes_string_utaco_temple_9_en
001729r 2  rr           	.byte <cutscenes_string_utaco_temple_10_en
00172Ar 2  rr           	.byte <cutscenes_string_utaco_temple_11_en
00172Br 2  rr           	.byte <cutscenes_string_utaco_temple_12_en
00172Cr 2  00           	.byte 0
00172Dr 2               cutscenes_strings_list_def_utaco_temple_en_hi:
00172Dr 2  rr           	.byte >cutscenes_string_utaco_temple_0_en
00172Er 2  rr           	.byte >cutscenes_string_utaco_temple_1_en
00172Fr 2  rr           	.byte >cutscenes_string_utaco_temple_2_en
001730r 2  rr           	.byte >cutscenes_string_utaco_temple_3_en
001731r 2  rr           	.byte >cutscenes_string_utaco_temple_4_en
001732r 2  rr           	.byte >cutscenes_string_utaco_temple_5_en
001733r 2  rr           	.byte >cutscenes_string_utaco_temple_6_en
001734r 2  rr           	.byte >cutscenes_string_utaco_temple_7_en
001735r 2  rr           	.byte >cutscenes_string_utaco_temple_8_en
001736r 2  rr           	.byte >cutscenes_string_utaco_temple_9_en
001737r 2  rr           	.byte >cutscenes_string_utaco_temple_10_en
001738r 2  rr           	.byte >cutscenes_string_utaco_temple_11_en
001739r 2  rr           	.byte >cutscenes_string_utaco_temple_12_en
00173Ar 2  00           	.byte 0
00173Br 2               cutscenes_strings_list_def_utaco_temple_es_lo:
00173Br 2  rr           	.byte <cutscenes_string_utaco_temple_0_es
00173Cr 2  rr           	.byte <cutscenes_string_utaco_temple_1_es
00173Dr 2  rr           	.byte <cutscenes_string_utaco_temple_2_es
00173Er 2  rr           	.byte <cutscenes_string_utaco_temple_3_es
00173Fr 2  rr           	.byte <cutscenes_string_utaco_temple_4_es
001740r 2  rr           	.byte <cutscenes_string_utaco_temple_5_es
001741r 2  rr           	.byte <cutscenes_string_utaco_temple_6_es
001742r 2  rr           	.byte <cutscenes_string_utaco_temple_7_es
001743r 2  rr           	.byte <cutscenes_string_utaco_temple_8_es
001744r 2  rr           	.byte <cutscenes_string_utaco_temple_9_es
001745r 2  rr           	.byte <cutscenes_string_utaco_temple_10_es
001746r 2  rr           	.byte <cutscenes_string_utaco_temple_11_es
001747r 2  rr           	.byte <cutscenes_string_utaco_temple_12_es
001748r 2  00           	.byte 0
001749r 2               cutscenes_strings_list_def_utaco_temple_es_hi:
001749r 2  rr           	.byte >cutscenes_string_utaco_temple_0_es
00174Ar 2  rr           	.byte >cutscenes_string_utaco_temple_1_es
00174Br 2  rr           	.byte >cutscenes_string_utaco_temple_2_es
00174Cr 2  rr           	.byte >cutscenes_string_utaco_temple_3_es
00174Dr 2  rr           	.byte >cutscenes_string_utaco_temple_4_es
00174Er 2  rr           	.byte >cutscenes_string_utaco_temple_5_es
00174Fr 2  rr           	.byte >cutscenes_string_utaco_temple_6_es
001750r 2  rr           	.byte >cutscenes_string_utaco_temple_7_es
001751r 2  rr           	.byte >cutscenes_string_utaco_temple_8_es
001752r 2  rr           	.byte >cutscenes_string_utaco_temple_9_es
001753r 2  rr           	.byte >cutscenes_string_utaco_temple_10_es
001754r 2  rr           	.byte >cutscenes_string_utaco_temple_11_es
001755r 2  rr           	.byte >cutscenes_string_utaco_temple_12_es
001756r 2  00           	.byte 0
001757r 2               cutscenes_strings_list_def_utaco_temple_ja_lo:
001757r 2  rr           	.byte <cutscenes_string_utaco_temple_0_ja
001758r 2  rr           	.byte <cutscenes_string_utaco_temple_1_ja
001759r 2  rr           	.byte <cutscenes_string_utaco_temple_2_ja
00175Ar 2  rr           	.byte <cutscenes_string_utaco_temple_3_ja
00175Br 2  rr           	.byte <cutscenes_string_utaco_temple_4_ja
00175Cr 2  rr           	.byte <cutscenes_string_utaco_temple_5_ja
00175Dr 2  rr           	.byte <cutscenes_string_utaco_temple_6_ja
00175Er 2  rr           	.byte <cutscenes_string_utaco_temple_7_ja
00175Fr 2  rr           	.byte <cutscenes_string_utaco_temple_8_ja
001760r 2  rr           	.byte <cutscenes_string_utaco_temple_9_ja
001761r 2  rr           	.byte <cutscenes_string_utaco_temple_10_ja
001762r 2  rr           	.byte <cutscenes_string_utaco_temple_11_ja
001763r 2  rr           	.byte <cutscenes_string_utaco_temple_12_ja
001764r 2  00           	.byte 0
001765r 2               cutscenes_strings_list_def_utaco_temple_ja_hi:
001765r 2  rr           	.byte >cutscenes_string_utaco_temple_0_ja
001766r 2  rr           	.byte >cutscenes_string_utaco_temple_1_ja
001767r 2  rr           	.byte >cutscenes_string_utaco_temple_2_ja
001768r 2  rr           	.byte >cutscenes_string_utaco_temple_3_ja
001769r 2  rr           	.byte >cutscenes_string_utaco_temple_4_ja
00176Ar 2  rr           	.byte >cutscenes_string_utaco_temple_5_ja
00176Br 2  rr           	.byte >cutscenes_string_utaco_temple_6_ja
00176Cr 2  rr           	.byte >cutscenes_string_utaco_temple_7_ja
00176Dr 2  rr           	.byte >cutscenes_string_utaco_temple_8_ja
00176Er 2  rr           	.byte >cutscenes_string_utaco_temple_9_ja
00176Fr 2  rr           	.byte >cutscenes_string_utaco_temple_10_ja
001770r 2  rr           	.byte >cutscenes_string_utaco_temple_11_ja
001771r 2  rr           	.byte >cutscenes_string_utaco_temple_12_ja
001772r 2  00           	.byte 0
001773r 2               cutscenes_strings_en_lo_lo:
001773r 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_en_lo
001774r 2  rr           	.byte <cutscenes_strings_list_def_mothership_en_lo
001775r 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_2_en_lo
001776r 2  rr           	.byte <cutscenes_strings_list_def_temple_ruins_en_lo
001777r 2  rr           	.byte <cutscenes_strings_list_def_utaco_temple_en_lo
001778r 2  00           	.byte 0
001779r 2               cutscenes_strings_en_lo_hi:
001779r 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_en_lo
00177Ar 2  rr           	.byte >cutscenes_strings_list_def_mothership_en_lo
00177Br 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_2_en_lo
00177Cr 2  rr           	.byte >cutscenes_strings_list_def_temple_ruins_en_lo
00177Dr 2  rr           	.byte >cutscenes_strings_list_def_utaco_temple_en_lo
00177Er 2  00           	.byte 0
00177Fr 2               cutscenes_strings_en_hi_lo:
00177Fr 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_en_hi
001780r 2  rr           	.byte <cutscenes_strings_list_def_mothership_en_hi
001781r 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_2_en_hi
001782r 2  rr           	.byte <cutscenes_strings_list_def_temple_ruins_en_hi
001783r 2  rr           	.byte <cutscenes_strings_list_def_utaco_temple_en_hi
001784r 2  00           	.byte 0
001785r 2               cutscenes_strings_en_hi_hi:
001785r 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_en_hi
001786r 2  rr           	.byte >cutscenes_strings_list_def_mothership_en_hi
001787r 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_2_en_hi
001788r 2  rr           	.byte >cutscenes_strings_list_def_temple_ruins_en_hi
001789r 2  rr           	.byte >cutscenes_strings_list_def_utaco_temple_en_hi
00178Ar 2  00           	.byte 0
00178Br 2               cutscenes_strings_es_lo_lo:
00178Br 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_es_lo
00178Cr 2  rr           	.byte <cutscenes_strings_list_def_mothership_es_lo
00178Dr 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_2_es_lo
00178Er 2  rr           	.byte <cutscenes_strings_list_def_temple_ruins_es_lo
00178Fr 2  rr           	.byte <cutscenes_strings_list_def_utaco_temple_es_lo
001790r 2  00           	.byte 0
001791r 2               cutscenes_strings_es_lo_hi:
001791r 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_es_lo
001792r 2  rr           	.byte >cutscenes_strings_list_def_mothership_es_lo
001793r 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_2_es_lo
001794r 2  rr           	.byte >cutscenes_strings_list_def_temple_ruins_es_lo
001795r 2  rr           	.byte >cutscenes_strings_list_def_utaco_temple_es_lo
001796r 2  00           	.byte 0
001797r 2               cutscenes_strings_es_hi_lo:
001797r 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_es_hi
001798r 2  rr           	.byte <cutscenes_strings_list_def_mothership_es_hi
001799r 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_2_es_hi
00179Ar 2  rr           	.byte <cutscenes_strings_list_def_temple_ruins_es_hi
00179Br 2  rr           	.byte <cutscenes_strings_list_def_utaco_temple_es_hi
00179Cr 2  00           	.byte 0
00179Dr 2               cutscenes_strings_es_hi_hi:
00179Dr 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_es_hi
00179Er 2  rr           	.byte >cutscenes_strings_list_def_mothership_es_hi
00179Fr 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_2_es_hi
0017A0r 2  rr           	.byte >cutscenes_strings_list_def_temple_ruins_es_hi
0017A1r 2  rr           	.byte >cutscenes_strings_list_def_utaco_temple_es_hi
0017A2r 2  00           	.byte 0
0017A3r 2               cutscenes_strings_ja_lo_lo:
0017A3r 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_ja_lo
0017A4r 2  rr           	.byte <cutscenes_strings_list_def_mothership_ja_lo
0017A5r 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_2_ja_lo
0017A6r 2  rr           	.byte <cutscenes_strings_list_def_temple_ruins_ja_lo
0017A7r 2  rr           	.byte <cutscenes_strings_list_def_utaco_temple_ja_lo
0017A8r 2  00           	.byte 0
0017A9r 2               cutscenes_strings_ja_lo_hi:
0017A9r 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_ja_lo
0017AAr 2  rr           	.byte >cutscenes_strings_list_def_mothership_ja_lo
0017ABr 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_2_ja_lo
0017ACr 2  rr           	.byte >cutscenes_strings_list_def_temple_ruins_ja_lo
0017ADr 2  rr           	.byte >cutscenes_strings_list_def_utaco_temple_ja_lo
0017AEr 2  00           	.byte 0
0017AFr 2               cutscenes_strings_ja_hi_lo:
0017AFr 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_ja_hi
0017B0r 2  rr           	.byte <cutscenes_strings_list_def_mothership_ja_hi
0017B1r 2  rr           	.byte <cutscenes_strings_list_def_destroyed_city_2_ja_hi
0017B2r 2  rr           	.byte <cutscenes_strings_list_def_temple_ruins_ja_hi
0017B3r 2  rr           	.byte <cutscenes_strings_list_def_utaco_temple_ja_hi
0017B4r 2  00           	.byte 0
0017B5r 2               cutscenes_strings_ja_hi_hi:
0017B5r 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_ja_hi
0017B6r 2  rr           	.byte >cutscenes_strings_list_def_mothership_ja_hi
0017B7r 2  rr           	.byte >cutscenes_strings_list_def_destroyed_city_2_ja_hi
0017B8r 2  rr           	.byte >cutscenes_strings_list_def_temple_ruins_ja_hi
0017B9r 2  rr           	.byte >cutscenes_strings_list_def_utaco_temple_ja_hi
0017BAr 2  00           	.byte 0
0017BBr 2               
0017BBr 1               
0017BBr 1  01 00 00 00  JumpColumnEmpty:	.byte $01,$00,$00,$00,$00,$00,$00,$00
0017BFr 1  00 00 00 00  
0017C3r 1  02 64 54 44  JumpColumnPylon0:	.byte $02,$64,$54,$44,$34,$24,$14,$04
0017C7r 1  34 24 14 04  
0017CBr 1  02 65 55 45  JumpColumnPylon1:	.byte $02,$65,$55,$45,$35,$25,$15,$05
0017CFr 1  35 25 15 05  
0017D3r 1  02 00 00 00  JumpColumnPylonE:	.byte $02,$00,$00,$00,$00,$00,$00,$00
0017D7r 1  00 00 00 00  
0017DBr 1               
0017DBr 1  42 43 42 43  EmptyBeatBar1:	.byte $42,$43,$42,$43,$42,$43,$42,$43,$42,$43,$42,$43,$42,$43,$42,$43,$42,$43,$42,$43
0017DFr 1  42 43 42 43  
0017E3r 1  42 43 42 43  
0017EFr 1  52 53 52 53  EmptyBeatBar2:	.byte $52,$53,$52,$53,$52,$53,$52,$53,$52,$53,$52,$53,$52,$53,$52,$53,$52,$53,$52,$53
0017F3r 1  52 53 52 53  
0017F7r 1  52 53 52 53  
001803r 1               
001803r 1               PAL_ingame:
001803r 1  0F 00 10 3C  	.byte $0f,$00,$10,$3c,$0f,$07,$06,$05,$0f,$07,$17,$27,$0f,$06,$0a,$30
001807r 1  0F 07 06 05  
00180Br 1  0F 07 17 27  
001813r 1  0F 30 2C 0F  	.byte $0f,$30,$2c,$0f,$0f,$2c,$36,$0f,$0f,$30,$2c,$36,$0f,$30,$36,$0f
001817r 1  0F 2C 36 0F  
00181Br 1  0F 30 2C 36  
001823r 1               
001823r 1               .include "romdata/meta_sprites/utaco_run.s"
001823r 2               utaco_run_PATTERN_OFFSET=0
001823r 2  06           utaco_run_frames: .byte 6
001824r 2  90           utaco_run_bytes_per_frame: .byte 144
001825r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001825r 2               utaco_run_frame_0:    ;(X,Y,PATTERN_ID,PAL)
001825r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001825r 2  00 00 00 00  .byte 0, 0, (utaco_run_PATTERN_OFFSET+0), 0
001829r 2  08 00 00 00  .byte 8, 0, (utaco_run_PATTERN_OFFSET+0), 0
00182Dr 2  10 00 01 00  .byte 16, 0, (utaco_run_PATTERN_OFFSET+1), 0
001831r 2  18 00 02 00  .byte 24, 0, (utaco_run_PATTERN_OFFSET+2), 0
001835r 2  20 00 03 00  .byte 32, 0, (utaco_run_PATTERN_OFFSET+3), 0
001839r 2  28 00 00 00  .byte 40, 0, (utaco_run_PATTERN_OFFSET+0), 0
00183Dr 2  00 08 00 00  .byte 0, 8, (utaco_run_PATTERN_OFFSET+0), 0
001841r 2  08 08 00 00  .byte 8, 8, (utaco_run_PATTERN_OFFSET+0), 0
001845r 2  10 08 04 00  .byte 16, 8, (utaco_run_PATTERN_OFFSET+4), 0
001849r 2  18 08 05 00  .byte 24, 8, (utaco_run_PATTERN_OFFSET+5), 0
00184Dr 2  20 08 06 00  .byte 32, 8, (utaco_run_PATTERN_OFFSET+6), 0
001851r 2  28 08 07 00  .byte 40, 8, (utaco_run_PATTERN_OFFSET+7), 0
001855r 2  00 10 00 00  .byte 0, 16, (utaco_run_PATTERN_OFFSET+0), 0
001859r 2  08 10 08 00  .byte 8, 16, (utaco_run_PATTERN_OFFSET+8), 0
00185Dr 2  10 10 09 00  .byte 16, 16, (utaco_run_PATTERN_OFFSET+9), 0
001861r 2  18 10 0A 01  .byte 24, 16, (utaco_run_PATTERN_OFFSET+10), 1
001865r 2  20 10 0B 02  .byte 32, 16, (utaco_run_PATTERN_OFFSET+11), 2
001869r 2  28 10 0C 00  .byte 40, 16, (utaco_run_PATTERN_OFFSET+12), 0
00186Dr 2  00 18 00 00  .byte 0, 24, (utaco_run_PATTERN_OFFSET+0), 0
001871r 2  08 18 0D 01  .byte 8, 24, (utaco_run_PATTERN_OFFSET+13), 1
001875r 2  10 18 0E 02  .byte 16, 24, (utaco_run_PATTERN_OFFSET+14), 2
001879r 2  18 18 0F 03  .byte 24, 24, (utaco_run_PATTERN_OFFSET+15), 3
00187Dr 2  20 18 10 03  .byte 32, 24, (utaco_run_PATTERN_OFFSET+16), 3
001881r 2  28 18 11 00  .byte 40, 24, (utaco_run_PATTERN_OFFSET+17), 0
001885r 2  00 20 00 00  .byte 0, 32, (utaco_run_PATTERN_OFFSET+0), 0
001889r 2  08 20 12 03  .byte 8, 32, (utaco_run_PATTERN_OFFSET+18), 3
00188Dr 2  10 20 13 03  .byte 16, 32, (utaco_run_PATTERN_OFFSET+19), 3
001891r 2  18 20 14 03  .byte 24, 32, (utaco_run_PATTERN_OFFSET+20), 3
001895r 2  20 20 00 00  .byte 32, 32, (utaco_run_PATTERN_OFFSET+0), 0
001899r 2  28 20 00 00  .byte 40, 32, (utaco_run_PATTERN_OFFSET+0), 0
00189Dr 2  00 28 15 00  .byte 0, 40, (utaco_run_PATTERN_OFFSET+21), 0
0018A1r 2  08 28 16 03  .byte 8, 40, (utaco_run_PATTERN_OFFSET+22), 3
0018A5r 2  10 28 17 00  .byte 16, 40, (utaco_run_PATTERN_OFFSET+23), 0
0018A9r 2  18 28 18 00  .byte 24, 40, (utaco_run_PATTERN_OFFSET+24), 0
0018ADr 2  20 28 00 00  .byte 32, 40, (utaco_run_PATTERN_OFFSET+0), 0
0018B1r 2  28 28 00 00  .byte 40, 40, (utaco_run_PATTERN_OFFSET+0), 0
0018B5r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0018B5r 2               utaco_run_frame_1:    ;(X,Y,PATTERN_ID,PAL)
0018B5r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0018B5r 2  00 00 00 00  .byte 0, 0, (utaco_run_PATTERN_OFFSET+0), 0
0018B9r 2  08 00 00 00  .byte 8, 0, (utaco_run_PATTERN_OFFSET+0), 0
0018BDr 2  10 00 19 00  .byte 16, 0, (utaco_run_PATTERN_OFFSET+25), 0
0018C1r 2  18 00 1A 00  .byte 24, 0, (utaco_run_PATTERN_OFFSET+26), 0
0018C5r 2  20 00 1B 00  .byte 32, 0, (utaco_run_PATTERN_OFFSET+27), 0
0018C9r 2  28 00 00 00  .byte 40, 0, (utaco_run_PATTERN_OFFSET+0), 0
0018CDr 2  00 08 00 00  .byte 0, 8, (utaco_run_PATTERN_OFFSET+0), 0
0018D1r 2  08 08 1C 00  .byte 8, 8, (utaco_run_PATTERN_OFFSET+28), 0
0018D5r 2  10 08 1D 00  .byte 16, 8, (utaco_run_PATTERN_OFFSET+29), 0
0018D9r 2  18 08 1E 00  .byte 24, 8, (utaco_run_PATTERN_OFFSET+30), 0
0018DDr 2  20 08 1F 00  .byte 32, 8, (utaco_run_PATTERN_OFFSET+31), 0
0018E1r 2  28 08 20 00  .byte 40, 8, (utaco_run_PATTERN_OFFSET+32), 0
0018E5r 2  00 10 00 00  .byte 0, 16, (utaco_run_PATTERN_OFFSET+0), 0
0018E9r 2  08 10 21 00  .byte 8, 16, (utaco_run_PATTERN_OFFSET+33), 0
0018EDr 2  10 10 22 00  .byte 16, 16, (utaco_run_PATTERN_OFFSET+34), 0
0018F1r 2  18 10 23 02  .byte 24, 16, (utaco_run_PATTERN_OFFSET+35), 2
0018F5r 2  20 10 24 02  .byte 32, 16, (utaco_run_PATTERN_OFFSET+36), 2
0018F9r 2  28 10 25 00  .byte 40, 16, (utaco_run_PATTERN_OFFSET+37), 0
0018FDr 2  00 18 00 00  .byte 0, 24, (utaco_run_PATTERN_OFFSET+0), 0
001901r 2  08 18 26 01  .byte 8, 24, (utaco_run_PATTERN_OFFSET+38), 1
001905r 2  10 18 27 03  .byte 16, 24, (utaco_run_PATTERN_OFFSET+39), 3
001909r 2  18 18 28 03  .byte 24, 24, (utaco_run_PATTERN_OFFSET+40), 3
00190Dr 2  20 18 29 02  .byte 32, 24, (utaco_run_PATTERN_OFFSET+41), 2
001911r 2  28 18 2A 00  .byte 40, 24, (utaco_run_PATTERN_OFFSET+42), 0
001915r 2  00 20 2B 00  .byte 0, 32, (utaco_run_PATTERN_OFFSET+43), 0
001919r 2  08 20 2C 03  .byte 8, 32, (utaco_run_PATTERN_OFFSET+44), 3
00191Dr 2  10 20 2D 03  .byte 16, 32, (utaco_run_PATTERN_OFFSET+45), 3
001921r 2  18 20 2E 03  .byte 24, 32, (utaco_run_PATTERN_OFFSET+46), 3
001925r 2  20 20 2F 00  .byte 32, 32, (utaco_run_PATTERN_OFFSET+47), 0
001929r 2  28 20 30 00  .byte 40, 32, (utaco_run_PATTERN_OFFSET+48), 0
00192Dr 2  00 28 31 00  .byte 0, 40, (utaco_run_PATTERN_OFFSET+49), 0
001931r 2  08 28 32 00  .byte 8, 40, (utaco_run_PATTERN_OFFSET+50), 0
001935r 2  10 28 00 00  .byte 16, 40, (utaco_run_PATTERN_OFFSET+0), 0
001939r 2  18 28 33 03  .byte 24, 40, (utaco_run_PATTERN_OFFSET+51), 3
00193Dr 2  20 28 34 00  .byte 32, 40, (utaco_run_PATTERN_OFFSET+52), 0
001941r 2  28 28 00 00  .byte 40, 40, (utaco_run_PATTERN_OFFSET+0), 0
001945r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001945r 2               utaco_run_frame_2:    ;(X,Y,PATTERN_ID,PAL)
001945r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001945r 2  00 00 00 00  .byte 0, 0, (utaco_run_PATTERN_OFFSET+0), 0
001949r 2  08 00 00 00  .byte 8, 0, (utaco_run_PATTERN_OFFSET+0), 0
00194Dr 2  10 00 00 00  .byte 16, 0, (utaco_run_PATTERN_OFFSET+0), 0
001951r 2  18 00 35 00  .byte 24, 0, (utaco_run_PATTERN_OFFSET+53), 0
001955r 2  20 00 36 00  .byte 32, 0, (utaco_run_PATTERN_OFFSET+54), 0
001959r 2  28 00 00 00  .byte 40, 0, (utaco_run_PATTERN_OFFSET+0), 0
00195Dr 2  00 08 00 00  .byte 0, 8, (utaco_run_PATTERN_OFFSET+0), 0
001961r 2  08 08 00 00  .byte 8, 8, (utaco_run_PATTERN_OFFSET+0), 0
001965r 2  10 08 37 00  .byte 16, 8, (utaco_run_PATTERN_OFFSET+55), 0
001969r 2  18 08 05 00  .byte 24, 8, (utaco_run_PATTERN_OFFSET+5), 0
00196Dr 2  20 08 38 00  .byte 32, 8, (utaco_run_PATTERN_OFFSET+56), 0
001971r 2  28 08 39 00  .byte 40, 8, (utaco_run_PATTERN_OFFSET+57), 0
001975r 2  00 10 00 00  .byte 0, 16, (utaco_run_PATTERN_OFFSET+0), 0
001979r 2  08 10 08 00  .byte 8, 16, (utaco_run_PATTERN_OFFSET+8), 0
00197Dr 2  10 10 3A 00  .byte 16, 16, (utaco_run_PATTERN_OFFSET+58), 0
001981r 2  18 10 3B 01  .byte 24, 16, (utaco_run_PATTERN_OFFSET+59), 1
001985r 2  20 10 3C 01  .byte 32, 16, (utaco_run_PATTERN_OFFSET+60), 1
001989r 2  28 10 3D 00  .byte 40, 16, (utaco_run_PATTERN_OFFSET+61), 0
00198Dr 2  00 18 00 00  .byte 0, 24, (utaco_run_PATTERN_OFFSET+0), 0
001991r 2  08 18 3E 00  .byte 8, 24, (utaco_run_PATTERN_OFFSET+62), 0
001995r 2  10 18 3F 02  .byte 16, 24, (utaco_run_PATTERN_OFFSET+63), 2
001999r 2  18 18 40 03  .byte 24, 24, (utaco_run_PATTERN_OFFSET+64), 3
00199Dr 2  20 18 41 03  .byte 32, 24, (utaco_run_PATTERN_OFFSET+65), 3
0019A1r 2  28 18 42 00  .byte 40, 24, (utaco_run_PATTERN_OFFSET+66), 0
0019A5r 2  00 20 00 00  .byte 0, 32, (utaco_run_PATTERN_OFFSET+0), 0
0019A9r 2  08 20 43 00  .byte 8, 32, (utaco_run_PATTERN_OFFSET+67), 0
0019ADr 2  10 20 44 03  .byte 16, 32, (utaco_run_PATTERN_OFFSET+68), 3
0019B1r 2  18 20 45 03  .byte 24, 32, (utaco_run_PATTERN_OFFSET+69), 3
0019B5r 2  20 20 46 03  .byte 32, 32, (utaco_run_PATTERN_OFFSET+70), 3
0019B9r 2  28 20 47 00  .byte 40, 32, (utaco_run_PATTERN_OFFSET+71), 0
0019BDr 2  00 28 00 00  .byte 0, 40, (utaco_run_PATTERN_OFFSET+0), 0
0019C1r 2  08 28 48 00  .byte 8, 40, (utaco_run_PATTERN_OFFSET+72), 0
0019C5r 2  10 28 49 00  .byte 16, 40, (utaco_run_PATTERN_OFFSET+73), 0
0019C9r 2  18 28 4A 00  .byte 24, 40, (utaco_run_PATTERN_OFFSET+74), 0
0019CDr 2  20 28 00 00  .byte 32, 40, (utaco_run_PATTERN_OFFSET+0), 0
0019D1r 2  28 28 00 00  .byte 40, 40, (utaco_run_PATTERN_OFFSET+0), 0
0019D5r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0019D5r 2               utaco_run_frame_3:    ;(X,Y,PATTERN_ID,PAL)
0019D5r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0019D5r 2  00 00 00 00  .byte 0, 0, (utaco_run_PATTERN_OFFSET+0), 0
0019D9r 2  08 00 00 00  .byte 8, 0, (utaco_run_PATTERN_OFFSET+0), 0
0019DDr 2  10 00 4B 00  .byte 16, 0, (utaco_run_PATTERN_OFFSET+75), 0
0019E1r 2  18 00 4C 00  .byte 24, 0, (utaco_run_PATTERN_OFFSET+76), 0
0019E5r 2  20 00 4D 00  .byte 32, 0, (utaco_run_PATTERN_OFFSET+77), 0
0019E9r 2  28 00 00 00  .byte 40, 0, (utaco_run_PATTERN_OFFSET+0), 0
0019EDr 2  00 08 00 00  .byte 0, 8, (utaco_run_PATTERN_OFFSET+0), 0
0019F1r 2  08 08 00 00  .byte 8, 8, (utaco_run_PATTERN_OFFSET+0), 0
0019F5r 2  10 08 4E 00  .byte 16, 8, (utaco_run_PATTERN_OFFSET+78), 0
0019F9r 2  18 08 4F 00  .byte 24, 8, (utaco_run_PATTERN_OFFSET+79), 0
0019FDr 2  20 08 50 00  .byte 32, 8, (utaco_run_PATTERN_OFFSET+80), 0
001A01r 2  28 08 51 00  .byte 40, 8, (utaco_run_PATTERN_OFFSET+81), 0
001A05r 2  00 10 00 00  .byte 0, 16, (utaco_run_PATTERN_OFFSET+0), 0
001A09r 2  08 10 52 00  .byte 8, 16, (utaco_run_PATTERN_OFFSET+82), 0
001A0Dr 2  10 10 53 00  .byte 16, 16, (utaco_run_PATTERN_OFFSET+83), 0
001A11r 2  18 10 54 01  .byte 24, 16, (utaco_run_PATTERN_OFFSET+84), 1
001A15r 2  20 10 55 01  .byte 32, 16, (utaco_run_PATTERN_OFFSET+85), 1
001A19r 2  28 10 56 00  .byte 40, 16, (utaco_run_PATTERN_OFFSET+86), 0
001A1Dr 2  00 18 00 00  .byte 0, 24, (utaco_run_PATTERN_OFFSET+0), 0
001A21r 2  08 18 57 00  .byte 8, 24, (utaco_run_PATTERN_OFFSET+87), 0
001A25r 2  10 18 58 03  .byte 16, 24, (utaco_run_PATTERN_OFFSET+88), 3
001A29r 2  18 18 59 03  .byte 24, 24, (utaco_run_PATTERN_OFFSET+89), 3
001A2Dr 2  20 18 5A 03  .byte 32, 24, (utaco_run_PATTERN_OFFSET+90), 3
001A31r 2  28 18 5B 00  .byte 40, 24, (utaco_run_PATTERN_OFFSET+91), 0
001A35r 2  00 20 5C 00  .byte 0, 32, (utaco_run_PATTERN_OFFSET+92), 0
001A39r 2  08 20 5D 03  .byte 8, 32, (utaco_run_PATTERN_OFFSET+93), 3
001A3Dr 2  10 20 5E 03  .byte 16, 32, (utaco_run_PATTERN_OFFSET+94), 3
001A41r 2  18 20 5F 03  .byte 24, 32, (utaco_run_PATTERN_OFFSET+95), 3
001A45r 2  20 20 00 00  .byte 32, 32, (utaco_run_PATTERN_OFFSET+0), 0
001A49r 2  28 20 00 00  .byte 40, 32, (utaco_run_PATTERN_OFFSET+0), 0
001A4Dr 2  00 28 60 00  .byte 0, 40, (utaco_run_PATTERN_OFFSET+96), 0
001A51r 2  08 28 61 00  .byte 8, 40, (utaco_run_PATTERN_OFFSET+97), 0
001A55r 2  10 28 62 00  .byte 16, 40, (utaco_run_PATTERN_OFFSET+98), 0
001A59r 2  18 28 00 00  .byte 24, 40, (utaco_run_PATTERN_OFFSET+0), 0
001A5Dr 2  20 28 00 00  .byte 32, 40, (utaco_run_PATTERN_OFFSET+0), 0
001A61r 2  28 28 00 00  .byte 40, 40, (utaco_run_PATTERN_OFFSET+0), 0
001A65r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001A65r 2               utaco_run_frame_4:    ;(X,Y,PATTERN_ID,PAL)
001A65r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001A65r 2  00 00 00 00  .byte 0, 0, (utaco_run_PATTERN_OFFSET+0), 0
001A69r 2  08 00 00 00  .byte 8, 0, (utaco_run_PATTERN_OFFSET+0), 0
001A6Dr 2  10 00 19 00  .byte 16, 0, (utaco_run_PATTERN_OFFSET+25), 0
001A71r 2  18 00 1A 00  .byte 24, 0, (utaco_run_PATTERN_OFFSET+26), 0
001A75r 2  20 00 1B 00  .byte 32, 0, (utaco_run_PATTERN_OFFSET+27), 0
001A79r 2  28 00 00 00  .byte 40, 0, (utaco_run_PATTERN_OFFSET+0), 0
001A7Dr 2  00 08 00 00  .byte 0, 8, (utaco_run_PATTERN_OFFSET+0), 0
001A81r 2  08 08 1C 00  .byte 8, 8, (utaco_run_PATTERN_OFFSET+28), 0
001A85r 2  10 08 1D 00  .byte 16, 8, (utaco_run_PATTERN_OFFSET+29), 0
001A89r 2  18 08 1E 00  .byte 24, 8, (utaco_run_PATTERN_OFFSET+30), 0
001A8Dr 2  20 08 1F 00  .byte 32, 8, (utaco_run_PATTERN_OFFSET+31), 0
001A91r 2  28 08 20 00  .byte 40, 8, (utaco_run_PATTERN_OFFSET+32), 0
001A95r 2  00 10 00 00  .byte 0, 16, (utaco_run_PATTERN_OFFSET+0), 0
001A99r 2  08 10 63 01  .byte 8, 16, (utaco_run_PATTERN_OFFSET+99), 1
001A9Dr 2  10 10 64 02  .byte 16, 16, (utaco_run_PATTERN_OFFSET+100), 2
001AA1r 2  18 10 23 02  .byte 24, 16, (utaco_run_PATTERN_OFFSET+35), 2
001AA5r 2  20 10 65 01  .byte 32, 16, (utaco_run_PATTERN_OFFSET+101), 1
001AA9r 2  28 10 66 00  .byte 40, 16, (utaco_run_PATTERN_OFFSET+102), 0
001AADr 2  00 18 00 00  .byte 0, 24, (utaco_run_PATTERN_OFFSET+0), 0
001AB1r 2  08 18 67 02  .byte 8, 24, (utaco_run_PATTERN_OFFSET+103), 2
001AB5r 2  10 18 68 03  .byte 16, 24, (utaco_run_PATTERN_OFFSET+104), 3
001AB9r 2  18 18 69 03  .byte 24, 24, (utaco_run_PATTERN_OFFSET+105), 3
001ABDr 2  20 18 6A 03  .byte 32, 24, (utaco_run_PATTERN_OFFSET+106), 3
001AC1r 2  28 18 6B 00  .byte 40, 24, (utaco_run_PATTERN_OFFSET+107), 0
001AC5r 2  00 20 6C 00  .byte 0, 32, (utaco_run_PATTERN_OFFSET+108), 0
001AC9r 2  08 20 6D 03  .byte 8, 32, (utaco_run_PATTERN_OFFSET+109), 3
001ACDr 2  10 20 6E 03  .byte 16, 32, (utaco_run_PATTERN_OFFSET+110), 3
001AD1r 2  18 20 6F 03  .byte 24, 32, (utaco_run_PATTERN_OFFSET+111), 3
001AD5r 2  20 20 70 00  .byte 32, 32, (utaco_run_PATTERN_OFFSET+112), 0
001AD9r 2  28 20 00 00  .byte 40, 32, (utaco_run_PATTERN_OFFSET+0), 0
001ADDr 2  00 28 71 00  .byte 0, 40, (utaco_run_PATTERN_OFFSET+113), 0
001AE1r 2  08 28 72 00  .byte 8, 40, (utaco_run_PATTERN_OFFSET+114), 0
001AE5r 2  10 28 73 00  .byte 16, 40, (utaco_run_PATTERN_OFFSET+115), 0
001AE9r 2  18 28 74 00  .byte 24, 40, (utaco_run_PATTERN_OFFSET+116), 0
001AEDr 2  20 28 75 00  .byte 32, 40, (utaco_run_PATTERN_OFFSET+117), 0
001AF1r 2  28 28 00 00  .byte 40, 40, (utaco_run_PATTERN_OFFSET+0), 0
001AF5r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001AF5r 2               utaco_run_frame_5:    ;(X,Y,PATTERN_ID,PAL)
001AF5r 2               ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001AF5r 2  00 00 00 00  .byte 0, 0, (utaco_run_PATTERN_OFFSET+0), 0
001AF9r 2  08 00 00 00  .byte 8, 0, (utaco_run_PATTERN_OFFSET+0), 0
001AFDr 2  10 00 01 00  .byte 16, 0, (utaco_run_PATTERN_OFFSET+1), 0
001B01r 2  18 00 76 00  .byte 24, 0, (utaco_run_PATTERN_OFFSET+118), 0
001B05r 2  20 00 77 00  .byte 32, 0, (utaco_run_PATTERN_OFFSET+119), 0
001B09r 2  28 00 00 00  .byte 40, 0, (utaco_run_PATTERN_OFFSET+0), 0
001B0Dr 2  00 08 00 00  .byte 0, 8, (utaco_run_PATTERN_OFFSET+0), 0
001B11r 2  08 08 00 00  .byte 8, 8, (utaco_run_PATTERN_OFFSET+0), 0
001B15r 2  10 08 78 00  .byte 16, 8, (utaco_run_PATTERN_OFFSET+120), 0
001B19r 2  18 08 79 00  .byte 24, 8, (utaco_run_PATTERN_OFFSET+121), 0
001B1Dr 2  20 08 7A 00  .byte 32, 8, (utaco_run_PATTERN_OFFSET+122), 0
001B21r 2  28 08 07 00  .byte 40, 8, (utaco_run_PATTERN_OFFSET+7), 0
001B25r 2  00 10 00 00  .byte 0, 16, (utaco_run_PATTERN_OFFSET+0), 0
001B29r 2  08 10 7B 00  .byte 8, 16, (utaco_run_PATTERN_OFFSET+123), 0
001B2Dr 2  10 10 7C 00  .byte 16, 16, (utaco_run_PATTERN_OFFSET+124), 0
001B31r 2  18 10 7D 01  .byte 24, 16, (utaco_run_PATTERN_OFFSET+125), 1
001B35r 2  20 10 7E 01  .byte 32, 16, (utaco_run_PATTERN_OFFSET+126), 1
001B39r 2  28 10 7F 00  .byte 40, 16, (utaco_run_PATTERN_OFFSET+127), 0
001B3Dr 2  00 18 00 00  .byte 0, 24, (utaco_run_PATTERN_OFFSET+0), 0
001B41r 2  08 18 80 03  .byte 8, 24, (utaco_run_PATTERN_OFFSET+128), 3
001B45r 2  10 18 81 03  .byte 16, 24, (utaco_run_PATTERN_OFFSET+129), 3
001B49r 2  18 18 82 03  .byte 24, 24, (utaco_run_PATTERN_OFFSET+130), 3
001B4Dr 2  20 18 83 01  .byte 32, 24, (utaco_run_PATTERN_OFFSET+131), 1
001B51r 2  28 18 84 00  .byte 40, 24, (utaco_run_PATTERN_OFFSET+132), 0
001B55r 2  00 20 00 00  .byte 0, 32, (utaco_run_PATTERN_OFFSET+0), 0
001B59r 2  08 20 85 00  .byte 8, 32, (utaco_run_PATTERN_OFFSET+133), 0
001B5Dr 2  10 20 86 03  .byte 16, 32, (utaco_run_PATTERN_OFFSET+134), 3
001B61r 2  18 20 87 03  .byte 24, 32, (utaco_run_PATTERN_OFFSET+135), 3
001B65r 2  20 20 88 00  .byte 32, 32, (utaco_run_PATTERN_OFFSET+136), 0
001B69r 2  28 20 00 00  .byte 40, 32, (utaco_run_PATTERN_OFFSET+0), 0
001B6Dr 2  00 28 89 00  .byte 0, 40, (utaco_run_PATTERN_OFFSET+137), 0
001B71r 2  08 28 8A 00  .byte 8, 40, (utaco_run_PATTERN_OFFSET+138), 0
001B75r 2  10 28 8B 03  .byte 16, 40, (utaco_run_PATTERN_OFFSET+139), 3
001B79r 2  18 28 00 00  .byte 24, 40, (utaco_run_PATTERN_OFFSET+0), 0
001B7Dr 2  20 28 00 00  .byte 32, 40, (utaco_run_PATTERN_OFFSET+0), 0
001B81r 2  28 28 00 00  .byte 40, 40, (utaco_run_PATTERN_OFFSET+0), 0
001B85r 2               utaco_run_frametable_lo:
001B85r 2  rr           	 .byte <utaco_run_frame_0
001B86r 2  rr           	 .byte <utaco_run_frame_1
001B87r 2  rr           	 .byte <utaco_run_frame_2
001B88r 2  rr           	 .byte <utaco_run_frame_3
001B89r 2  rr           	 .byte <utaco_run_frame_4
001B8Ar 2  rr           	 .byte <utaco_run_frame_5
001B8Br 2               utaco_run_frametable_hi:
001B8Br 2  rr           	 .byte >utaco_run_frame_0
001B8Cr 2  rr           	 .byte >utaco_run_frame_1
001B8Dr 2  rr           	 .byte >utaco_run_frame_2
001B8Er 2  rr           	 .byte >utaco_run_frame_3
001B8Fr 2  rr           	 .byte >utaco_run_frame_4
001B90r 2  rr           	 .byte >utaco_run_frame_5
001B91r 2               
001B91r 1  4C 00 00     UTACOSP:          FPA_MAKEFP 1,0,30
001B94r 1               
001B94r 1               
001B94r 1               ;Song data tables
001B94r 1  rr rr rr     SDList_MusicLo: .byte <songdata1_musicdata,<songdata2_musicdata,<songdata3_musicdata
001B97r 1  rr rr rr     SDList_MusicHi: .byte >songdata1_musicdata,>songdata2_musicdata,>songdata3_musicdata
001B9Ar 1  00 02 04     SDList_Bank1:   .byte 0,2,4
001B9Dr 1  01 03 05     SDList_Bank2:   .byte 1,3,5
001BA0r 1  rr rr rr     SDList_CommandsLo: .byte <first_stage_beats_commands,<second_stage_beats_commands,<third_stage_beats_commands
001BA3r 1  rr rr rr     SDList_CommandsHi: .byte >first_stage_beats_commands,>second_stage_beats_commands,>third_stage_beats_commands
001BA6r 1  rr rr rr     SDList_BeatsLo: .byte <first_stage_beats_beats,<second_stage_beats_beats,<third_stage_beats_beats
001BA9r 1  rr rr rr     SDList_BeatsHi: .byte >first_stage_beats_beats,>second_stage_beats_beats,>third_stage_beats_beats
001BACr 1               
001BACr 1  rr rr rr     SDList_pILo: .byte <first_stage_beats_pI,<second_stage_beats_pI,<third_stage_beats_pI
001BAFr 1  rr rr rr     SDList_pIHi: .byte >first_stage_beats_pI,>second_stage_beats_pI,>third_stage_beats_pI
001BB2r 1               
001BB2r 1  rr rr rr     SDList_pointsLo: .byte <first_stage_beats_points,<second_stage_beats_points,<third_stage_beats_points
001BB5r 1  rr rr rr     SDList_pointsHi: .byte >first_stage_beats_points,>second_stage_beats_points,>third_stage_beats_points
001BB8r 1  rr rr rr     SDList_pointsMinusLo: .byte <first_stage_beats_points_minus,<second_stage_beats_points_minus,<third_stage_beats_points_minus
001BBBr 1  rr rr rr     SDList_pointsMinusHi: .byte >first_stage_beats_points_minus,>second_stage_beats_points_minus,>third_stage_beats_points_minus
001BBEr 1               
001BBEr 1  rr rr rr     SDList_StringsLoLo: .byte <first_stage_beats_strings_lo,<second_stage_beats_strings_lo,<third_stage_beats_strings_lo
001BC1r 1  rr rr rr     SDList_StringsLoHi: .byte >first_stage_beats_strings_lo,>second_stage_beats_strings_lo,>third_stage_beats_strings_lo
001BC4r 1  rr rr rr     SDList_StringsHiLo: .byte <first_stage_beats_strings_hi,<second_stage_beats_strings_hi,<third_stage_beats_strings_hi
001BC7r 1  rr rr rr     SDList_StringsHiHi: .byte >first_stage_beats_strings_hi,>second_stage_beats_strings_hi,>third_stage_beats_strings_hi
001BCAr 1               
001BCAr 1               
001BCAr 1               
001BCAr 1               .segment "DPCM"
000000r 1  AA AA AA AA      .incbin "romdata/music/first_stage_samples.bin"
000004r 1  AA AF F0 9E  
000008r 1  9F F0 06 AE  
000240r 1               
000240r 1               
000240r 1               .segment "INT_VECTORS"
000000r 1  rr rr rr rr  		.word NMI,reset,IRQMagic
000004r 1  rr rr        
000006r 1               
000006r 1               
000006r 1               
